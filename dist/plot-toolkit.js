/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/css-loader/dist/cjs.js!./abstract-layer/style.css":
/*!*************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./abstract-layer/style.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"axis-layer svg,\\r\\nline-bin-layer svg,\\r\\nline-point-layer svg,\\r\\nline-formula-layer svg,\\r\\nline-gaussian-layer svg,\\r\\ncontrol-marker-layer svg,\\r\\nhistogram-layer svg,\\r\\nscatter-layer canvas,\\r\\npolygon-layer svg,\\r\\ntooltip-layer svg,\\r\\nsegment-layer svg,\\r\\nclick-layer svg,\\r\\nbarchart-layer svg,\\r\\noverlay-line-layer canvas,\\r\\ncanvas-barchart-layer canvas,\\r\\nheat-map canvas,\\r\\ncurve-view-layer canvas\\r\\n{\\r\\n    position: absolute;\\r\\n    top:0;\\r\\n    left:0;\\r\\n    overflow: visible;\\r\\n    pointer-events: none;\\r\\n}\\r\\naxis-layer, axis-layer > div,\\r\\nline-bin-layer, line-bin-layer > div,\\r\\nline-point-layer, line-point-layer > div,\\r\\nline-formula-layer, line-formula-layer > div,\\r\\nline-gaussian-layer, line-gaussian-layer > div,\\r\\ncontrol-marker-layer, control-marker-layer > div,\\r\\nhistogram-layer, histogram-layer > div,\\r\\nscatter-layer, scatter-layer > div,\\r\\npolygon-layer, polygon-layer > div,\\r\\ntooltip-layer, tooltip-layer > div,\\r\\nsegment-layer, segment-layer > div,\\r\\nclick-layer, click-layer > div,\\r\\nbarchart-layer, barchart-layer > div,\\r\\noverlay-line-layer, overlay-line-layer > div,\\r\\ncanvas-barchart-layer, barchart-layer > div, \\r\\nheat-map > div,\\r\\ncurve-view-layer > div\\r\\n{\\r\\n    flex:1;\\r\\n    display: flex;\\r\\n}\\r\\naxis-layer,\\r\\nline-bin-layer,\\r\\nline-point-layer,\\r\\nline-formula-layer,\\r\\nline-gaussian-layer,\\r\\ncontrol-marker-layer,\\r\\nhistogram-layer,\\r\\nscatter-layer,\\r\\npolygon-layer,\\r\\ntooltip-layer,\\r\\nsegment-layer,\\r\\nclick-layer,\\r\\nbarchart-layer,\\r\\noverlay-line-layer,\\r\\ncanvas-barchart-layer,\\r\\nheat-map,\\r\\ncurve-view-layer\\r\\n{\\r\\n    position:static !important;\\r\\n    pointer-events:none;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./abstract-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./axis-layer/style.css":
/*!*********************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./axis-layer/style.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"axis-layer .layer .tick line {\\r\\n    /* stroke: rgba(34, 139, 34, 0.5); */\\r\\n    stroke: #555;\\r\\n    stroke-width: 1;\\r\\n    stroke-opacity: 1;\\r\\n}\\r\\n\\r\\naxis-layer .layer .minor line {\\r\\n    /* stroke: rgba(34, 139, 34, 0.5); */\\r\\n    stroke: #333;\\r\\n    stroke-width: 0.7;\\r\\n    stroke-opacity: 0.7;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./axis-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./barchart-layer/style.css":
/*!*************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./barchart-layer/style.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"barchart-layer svg rect {\\r\\n    stroke: gray;\\r\\n    stroke-width: 0.3;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./barchart-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./canvas-barchart-layer/style.css":
/*!********************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./canvas-barchart-layer/style.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"canvas-barchart-layer svg rect {\\r\\n    stroke: gray;\\r\\n    stroke-width: 0.3;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./canvas-barchart-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./click-layer/style.css":
/*!**********************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./click-layer/style.css ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"click-layer svg.clickable {\\r\\n    pointer-events:all;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./click-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./control-marker-layer/style.css":
/*!*******************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./control-marker-layer/style.css ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"control-marker-layer svg > g{\\r\\n    pointer-events: all;\\r\\n}\\r\\ncontrol-marker-layer svg {\\r\\n    pointer-events: all;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./control-marker-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./curve-view-layer/style.css":
/*!***************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./curve-view-layer/style.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./curve-view-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./heat-map/style.css":
/*!*******************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./heat-map/style.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./heat-map/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./interactive-layer/style.css":
/*!****************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./interactive-layer/style.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"segment-layer svg.edit-point,\\r\\npolygon-layer svg.edit-point \\r\\n{\\r\\n    background-color: rgba(128, 128, 255, 0.5);\\r\\n    cursor: crosshair;\\r\\n    pointer-events: all;\\r\\n    z-index: 2;\\r\\n}\\r\\nsegment-layer svg.edit-point.del-point,\\r\\npolygon-layer svg.edit-point.del-point \\r\\n{\\r\\n    cursor: alias;\\r\\n}\\r\\nsegment-layer svg.edit-point.add-point,\\r\\npolygon-layer svg.edit-point.add-point \\r\\n{\\r\\n    cursor: copy;\\r\\n}\\r\\nsegment-layer div.status,\\r\\npolygon-layer div.status\\r\\n{\\r\\n    position: absolute;\\r\\n    bottom: 10px;\\r\\n    right: 10px;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./interactive-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./layer-collection/style.css":
/*!***************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./layer-collection/style.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"layer-collection, layer-collection > div {\\r\\n    display: flex;\\r\\n    flex: 1;\\r\\n    width: 100%;\\r\\n}\\r\\nlayer-collection div.notification {\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    pointer-events:none;\\r\\n}\\r\\nlayer-collection div.notification > div {\\r\\n    background-color: rgba(32,32,32,0.5);\\r\\n    width: 70px;\\r\\n    height: 65px;\\r\\n    font-size: 200%;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n    border-radius: 15px;\\r\\n    padding-top: 5px;\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n    transition: opacity 1s ease-in-out;\\r\\n}\\r\\nlayer-collection div.tooltip\\r\\n{\\r\\n    display: inline-block;\\r\\n    width: auto;\\r\\n    position: absolute;\\r\\n    pointer-events:none;\\r\\n    background-color: rgba(32,32,32,0.5);\\r\\n    color: white;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./layer-collection/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./line-formula-layer/style.css":
/*!*****************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./line-formula-layer/style.css ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"line-formula-layer div.equation-holder {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: auto;\\r\\n    cursor: pointer;\\r\\n    pointer-events: all;\\r\\n    z-index: 1;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./line-formula-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./line-gaussian-layer/style.css":
/*!******************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./line-gaussian-layer/style.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./line-gaussian-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./line-layer/style.css":
/*!*********************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./line-layer/style.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./line-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./segment-layer/style.css":
/*!************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./segment-layer/style.css ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"segment-layer div.equation {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: auto;\\r\\n    cursor: pointer;\\r\\n    pointer-events: all;\\r\\n    z-index: 1;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./segment-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!./tooltip-layer/style.css":
/*!************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!./tooltip-layer/style.css ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"tooltip-layer svg \\r\\n{\\r\\n    pointer-events: all;\\r\\n}\\r\\ntooltip-layer div.status\\r\\n{\\r\\n    position: absolute;\\r\\n    bottom: 10px;\\r\\n    right: 10px;\\r\\n}\\r\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./tooltip-layer/style.css?../node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/api.js":
/*!******************************************************!*\
  !*** ../node_modules/css-loader/dist/runtime/api.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}\n\n//# sourceURL=webpack:///../node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "../node_modules/lodash/lodash.js":
/*!****************************************************************************!*\
  !*** delegated ./node_modules/lodash/lodash.js from dll-reference library ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference library */ \"dll-reference library\"))(1);\n\n//# sourceURL=webpack:///delegated_./node_modules/lodash/lodash.js_from_dll-reference_library?");

/***/ }),

/***/ "../node_modules/resize-sensor/ResizeSensor.min.js":
/*!*********************************************************************************************!*\
  !*** delegated ./node_modules/resize-sensor/ResizeSensor.min.js from dll-reference library ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = (__webpack_require__(/*! dll-reference library */ \"dll-reference library\"))(4);\n\n//# sourceURL=webpack:///delegated_./node_modules/resize-sensor/ResizeSensor.min.js_from_dll-reference_library?");

/***/ }),

/***/ "../node_modules/style-loader/lib/addStyles.js":
/*!*****************************************************!*\
  !*** ../node_modules/style-loader/lib/addStyles.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"../node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///../node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "../node_modules/style-loader/lib/urls.js":
/*!************************************************!*\
  !*** ../node_modules/style-loader/lib/urls.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///../node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./abstract-layer-2d/index.js":
/*!************************************!*\
  !*** ./abstract-layer-2d/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\r\n    component: component,\r\n    klass: AbstractLayer2D\r\n}\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer */ \"./abstract-layer/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar AbstractLayerComponent = AbstractLayer.component;\r\n\r\nfunction component(componentData) {\r\n    componentData.bindings = {\r\n        minY: \"<\",\r\n        maxY: \"<\",\r\n        minDrawY: \"<\",\r\n        maxDrawY: \"<\",\r\n        orthoLoga: \"<\",\r\n        autofit: \"<\",\r\n        ...componentData.bindings\r\n    }\r\n    return AbstractLayerComponent(componentData);\r\n}\r\nfunction AbstractLayer2D($timeout, $element, $scope) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([\r\n        \"minY\",\r\n        \"maxY\",\r\n        \"minDrawY\",\r\n        \"maxDrawY\",\r\n        \"orthoLoga\",\r\n    ]);\r\n    this.twoDBindings = function() {\r\n        this.minY = this.minY || 0;\r\n        this.maxY = _.isFinite(this.maxY) ? this.maxY : 100;\r\n        this.minDrawY = this.minDrawY || this.minY;\r\n        this.maxDrawY = this.maxDrawY || this.maxY;\r\n    }\r\n\r\n    this.registerWatch(function() {\r\n        if (self.orthoLoga) {\r\n            if (self.minY <= 0) self.minY = 0.01;\r\n            if (self.maxY <= 0) self.maxY = 0.01;\r\n        }\r\n        self.getOrthoTransform(true);\r\n    });\r\n    /*this.twoDRegisterWatch = function() {\r\n        this.registerWatch(function() {\r\n            self.getOrthoTransform(true);\r\n            self.drawOptimized();\r\n        });\r\n    }\r\n    let superDoInit = this.doInit;\r\n    this.doInit = function() {\r\n        this.twoDRegisterWatch();\r\n        superDoInit.call(this);\r\n    }*/\r\n    this.orthoRange = function() {\r\n        let range;\r\n        switch (this.axisDirection) {\r\n            case 'right':\r\n            case 'left':\r\n                range = [this.contentHeight(), 0];break;\r\n            case 'up':\r\n            case 'down':\r\n                range = [0, this.contentWidth()];break;\r\n            default:\r\n                range = [this.contentHeight(), 0];\r\n        }\r\n        return range;\r\n    }\r\n    this.getOrthoTransform = function(update) {\r\n        if (!this._otransform || update) {\r\n            if (update) {\r\n                this.contentWidth(true);\r\n                this.contentHeight(true);\r\n            }\r\n            this._otransform = (this.orthoLoga?d3.scaleLog():d3.scaleLinear())\r\n                                .domain(this.orthoDomain())\r\n                                .range(this.orthoRange());\r\n        }\r\n        return this._otransform;\r\n    }\r\n    this.orthoDomain = function() {\r\n        return [this.minY, this.maxY];\r\n    }\r\n    // this.orthoRange = function() {\r\n    //     return [this.contentHeight(), 0];\r\n    // }\r\n    this.updateMaxY = function(newVal) {\r\n        this.maxY = newVal;\r\n        if (this.update['maxY']) \r\n            this.update['maxY'](newVal);\r\n    }\r\n    this.preDraw = function() {\r\n        if (self.autofit) {\r\n            self.doAutofit();\r\n        }\r\n    }\r\n    this.doAutofit = function() {\r\n        console.error('Abstract doAutofit');\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./abstract-layer-2d/index.js?");

/***/ }),

/***/ "./abstract-layer/index.js":
/*!*********************************!*\
  !*** ./abstract-layer/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\r\n    component: component,\r\n    klass: AbstractLayer\r\n}\r\n__webpack_require__(/*! ./style.css */ \"./abstract-layer/style.css\");\r\nvar ResizeSensor = __webpack_require__(/*! resize-sensor */ \"../node_modules/resize-sensor/ResizeSensor.min.js\");\r\nif (window.ResizeObserver) {\r\n    // chrome only\r\n    ResizeSensor = resizeSensor;\r\n    function resizeSensor(element = document, callback = () => { }) {\r\n        if (element instanceof $) element = element[0];\r\n        this.element = element;\r\n        this.callback = () => setTimeout(callback);\r\n\r\n        this.resizeObserver = new ResizeObserver(this.callback)\r\n        this.resizeObserver.observe(this.element);\r\n        return this;\r\n    }\r\n    resizeSensor.prototype.detach = function () {\r\n        this.resizeObserver.unobserve(this.element);\r\n    }\r\n}\r\n\r\nvar debounce = __webpack_require__(/*! lodash */ \"../node_modules/lodash/lodash.js\").debounce;\r\nvar merge = __webpack_require__(/*! lodash */ \"../node_modules/lodash/lodash.js\").merge;\r\nfunction component(componentData) {\r\n    return {\r\n        controller: componentData.controller,\r\n        controllerAs: componentData.controllerAs || 'self',\r\n        template: componentData.template,\r\n        bindings: {\r\n            padding: '<',\r\n            hPadding: '<',\r\n            vPadding: '<',\r\n            lPadding: '<',\r\n            rPadding: '<',\r\n            tPadding: '<',\r\n            bPadding: '<',\r\n            minVal: '<',\r\n            maxVal: '<',\r\n            minDraw: '<',\r\n            maxDraw: '<',\r\n            getters: \"<\",\r\n            setters: \"<\",\r\n            loga: '<',\r\n            axisDirection: '<',\r\n            placement: '<',\r\n            getMinVal: '<',\r\n            getMaxVal: '<',\r\n            ...componentData.bindings\r\n        },\r\n        require: {\r\n            layerCollection: \"?^^layerCollection\"\r\n        }\r\n    }\r\n}\r\nfunction bindings(bindings) {\r\n    var defaultBindings = {\r\n        padding: '<',\r\n        hPadding: '<',\r\n        vPadding: '<',\r\n        lPadding: '<',\r\n        rPadding: '<',\r\n        tPadding: '<',\r\n        bPadding: '<',\r\n        minVal: '<',\r\n        maxVal: '<',\r\n        minDraw: '<',\r\n        maxDraw: '<',\r\n        getters: \"<\",\r\n        setters: \"<\",\r\n        loga: '<',\r\n        axisDirection: '<',\r\n        placement: '<',\r\n        params: '<'\r\n    }\r\n    return merge(defaultBindings,bindings);\r\n}\r\nfunction AbstractLayer($timeout, $element, $scope) {\r\n    let self = this;\r\n\r\n    this.leftPadding = function(){\r\n        return this.lPadding || this.hPadding || this.padding || (this.layerCollection || {}).lPadding || 0;\r\n    }\r\n    this.rightPadding = function(){\r\n        return this.rPadding || this.hPadding || this.padding || (this.layerCollection || {}).rPadding || 0;\r\n    }\r\n    this.topPadding = function() {\r\n        return this.tPadding || this.vPadding || this.padding || (this.layerCollection || {}).tPadding || 0;\r\n    }\r\n    this.bottomPadding = function() {\r\n        return this.bPadding || this.vPadding || this.padding || (this.layerCollection || {}).bPadding || 0;\r\n    }\r\n    this.paddingStr = function () {\r\n        return `${this.topPadding()}px ${this.rightPadding()}px ${this.bottomPadding()}px ${this.leftPadding()}px`\r\n    }\r\n    this.parentWidth = function() {\r\n        return $element.parent().width();\r\n    }\r\n    this.parentHeight = function() {\r\n        return $element.parent().height();\r\n    }\r\n    this.contentWidth = function(update) {\r\n        if (!this.width || update )\r\n            this.width = $element.find('svg,canvas').width();\r\n        return this.width;\r\n    }\r\n    this.contentHeight = function(update) {\r\n        if (!this.height || update )\r\n            this.height = $element.find('svg,canvas').height();\r\n        return this.height;\r\n    }\r\n    this.domain = function() {\r\n        return [this.minVal, this.maxVal];\r\n    }\r\n\r\n    this.range = function() {\r\n        let range;\r\n        switch (this.axisDirection) {\r\n            case 'right':\r\n                range = [0, this.contentWidth()];break;\r\n            case 'left':\r\n                range = [this.contentWidth(), 0];break;\r\n            case 'up':\r\n                range = [this.contentHeight(), 0];break;\r\n            case 'down':\r\n                range = [0, this.contentHeight()];break;\r\n            default:\r\n                range = [0, this.contentWidth()];\r\n        }\r\n        return range;\r\n    }\r\n    this.getTransform = function(update) {\r\n        if (!this._transform || update) {\r\n            if (update) {\r\n                this.contentWidth(true);\r\n                this.contentHeight(true);\r\n            }\r\n            this._transform = (this.loga?d3.scaleLog():d3.scaleLinear())\r\n                                .domain(this.domain())\r\n                                .range(this.range());\r\n        }\r\n        return this._transform;\r\n    }\r\n    this.defaultBindings = function(){\r\n        console.error(\"Abstract default bindings\");\r\n    }\r\n    this.drawOptimized = debounce(function () {\r\n        if ($scope.$$destroyed) return;\r\n        if (self.loga) {\r\n            if (self.minVal <= 0) self.minVal = 0.01;\r\n            if (self.maxVal <= 0) self.maxVal = 0.01;\r\n        } else {\r\n            //self.minVal = _.isFinite(self.originalMinVal) ? self.originalMinVal : self.minVal;\r\n            //self.maxVal = _.isFinite(self.originalMaxVal) ? self.originalMaxVal : self.maxVal;\r\n            self.minVal = self.getMinVal ? self.getMinVal() : self.minVal;\r\n            self.maxVal = self.getMaxVal ? self.getMaxVal() : self.maxVal;\r\n        }\r\n        for( let f of self.watchCallbacks) f();\r\n        self.getTransform(true);\r\n        self.preDraw();\r\n        self.draw();\r\n        self.postDraw();\r\n        if (!$scope.$$phase) $scope.$digest();\r\n    }, 300);\r\n    \r\n    this.watchCallbacks = [];\r\n    this.watchProperties = [\r\n        'minVal',\r\n        'maxVal',\r\n        'minDraw',\r\n        'maxDraw',\r\n        'loga',\r\n        'axisDirection',\r\n        'placement'\r\n    ]\r\n    this.registerWatch = function(callback) {\r\n        this.watchCallbacks.push(callback);\r\n    }\r\n    this.activateWatch = function() {\r\n        $scope.$watch(function() {\r\n            return self.watchProperties.map((prop) => (self[prop]));\r\n            //return [self.minVal, self.maxVal, self.loga, self.axisDirection];\r\n        }, function() {\r\n            // for( let f of self.watchCallbacks) f();\r\n            // self.getTransform(true);\r\n            //self.originalMinVal = self.minVal != 0.01 ? self.minVal : self.originalMinVal;\r\n            //self.originalMaxVal = self.maxVal != 0.01 ? self.maxVal : self.originalMaxVal;\r\n            self.drawOptimized();\r\n        }, true);\r\n        $scope.$on('jpanel-resized', function() {\r\n            self.drawOptimized();\r\n        });\r\n    }\r\n    this.doInit = function() {\r\n        this.update = {};\r\n        this.axisDirection = this.axisDirection || \"right\";\r\n        this.placement = this.placement || 0;\r\n\r\n        this.minVal = this.minVal || 0;\r\n        this.maxVal = _.isFinite(this.maxVal) ? this.maxVal : 100;\r\n        this.minDraw = this.minDraw || this.minVal;\r\n        this.maxDraw = this.maxDraw || this.maxVal;\r\n        this.defaultBindings();\r\n\r\n        let holder = $element.first();\r\n        new ResizeSensor(holder[0], function() {\r\n            // for( let f of self.watchCallbacks) f();\r\n            // self.getTransform(true);\r\n            self.drawOptimized();\r\n        });\r\n        if (this.layerCollection) {\r\n            // getters\r\n            for (let key of Object.keys(this.getters || {})) {\r\n                this.layerCollection.$scope.$on(this.getters[key], function(evt, value){\r\n                    evt.stopPropagation();\r\n                    evt.preventDefault();\r\n                    self._update = true;\r\n                    self[key] = value;\r\n                });\r\n            }\r\n            // setters\r\n            for (let key of Object.keys(this.setters || {})) {\r\n                this.update[key] = function(newVal) {\r\n                    self.layerCollection.$scope.$emit(self.setters[key], newVal);\r\n                }\r\n            }\r\n        }\r\n        holder.hide();\r\n        this.activateWatch();\r\n        this.getTransform(true);\r\n        this.preDraw();\r\n        this.draw();\r\n        this.postDraw();\r\n        holder.show();\r\n    }\r\n    this.preDraw = function(){\r\n    }\r\n    this.draw = function() {\r\n        console.error(\"Abstract draw\");\r\n    }\r\n    this.postDraw = function(){\r\n    }\r\n    this.onMouseMoveTooltip = function($event) {\r\n        if (this.layerCollection) this.layerCollection.tooltip(true, 'abc');\r\n    }\r\n    this.onMouseLeaveTooltip = function($event) {\r\n        if (this.layerCollection) this.layerCollection.tooltip(false);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./abstract-layer/index.js?");

/***/ }),

/***/ "./abstract-layer/style.css":
/*!**********************************!*\
  !*** ./abstract-layer/style.css ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./abstract-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./abstract-layer/style.css?");

/***/ }),

/***/ "./axis-layer/index.js":
/*!*****************************!*\
  !*** ./axis-layer/index.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = \"plot-toolkit\";\r\nconst name = \"axisLayer\";\r\nmodule.exports.name = name;\r\n\r\n__webpack_require__(/*! ./style.css */ \"./axis-layer/style.css\");\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer */ \"./abstract-layer/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar bindings = AbstractLayer.bindings;\r\nvar component = AbstractLayer.component;\r\n\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nlet bestNumberFormat = __webpack_require__(/*! ../common */ \"./common.js\").bestNumberFormat;\r\nangular.module(moduleName).component(name, component({\r\n    controller: AxisLayerController, \r\n    template: __webpack_require__(/*! ./template.html */ \"./axis-layer/template.html\"),\r\n    bindings: {\r\n        precision: '<',\r\n        nTicks: '<',\r\n        grid: '<',\r\n        minorTicks: '<'\r\n    }\r\n}));\r\nfunction AxisLayerController($timeout, $element, $scope ) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([\r\n        'precision',\r\n        'nTicks',\r\n        'grid',\r\n        'minorTicks'\r\n    ]);\r\n    this.tickValues = function() {\r\n        if (!this.loga) {\r\n            const step = (self.maxVal - self.minVal) / this.nTicks;\r\n            return d3.range(self.nTicks + 1).map((d, i) => self.minVal + i * step);\r\n            // let step = (Math.ceil(self.maxVal)- Math.floor(self.minVal))/this.nTicks;\r\n            // return d3.range(Math.floor(self.minVal), Math.ceil(self.maxVal), step);\r\n        }\r\n        else {\r\n            return genLogTickValues(_.min([self.minVal, self.maxVal]), _.max([self.minVal, self.maxVal]));\r\n        }\r\n    }\r\n    this.defaultBindings = function() {\r\n        this.grid = (this.grid === undefined)?1:this.grid;\r\n        this.nTicks = this.nTicks || 5;\r\n        this.minorTicks = this.minorTicks || 2;\r\n        this.precision = isNaN(this.precision) ? 1 : this.precision;\r\n    }\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n        /*\r\n        $scope.$watch(function() {\r\n            return [self.maxVal, self.minVal];\r\n        }, function() {\r\n            console.log('redraw');\r\n            self.getTransform(true);    \r\n            self.drawOptimized();\r\n        }, true);\r\n        */\r\n    }\r\n    this._translate = function() {\r\n        switch (this.axisDirection) {\r\n            case 'right':\r\n            case 'left':\r\n                return this.placement?`translate(0, ${this.contentHeight()}px)`:\"translate(0,0)\";\r\n            case 'up':\r\n            case 'down':\r\n                return this.placement?`translate(${this.contentWidth()}px, 0)`:\"translate(0,0)\";\r\n        }\r\n        return \"translate(0,0)\";\r\n    }\r\n    this._tickSize = function() {\r\n        switch (this.axisDirection) {\r\n            case 'right':\r\n            case 'left':\r\n                return this.grid?-this.contentHeight():0;\r\n            case 'up':\r\n            case 'down':\r\n                return this.grid?-this.contentWidth():0;\r\n        }\r\n        return -height;\r\n    }\r\n    this._axisFunc = function() {\r\n        switch (this.axisDirection) {\r\n            case 'right':\r\n            case 'left':\r\n                return this.placement?d3.axisBottom:d3.axisTop;\r\n            case 'up':\r\n            case 'down':\r\n                return this.placement?d3.axisRight:d3.axisLeft;\r\n        }\r\n        return d3.axisBottom;\r\n    }\r\n    this.draw = draw;\r\n    function draw() {\r\n        // console.log('DRAW', self.axisDirection, self.maxVal);\r\n        let svg = $element.find('svg');\r\n        let transform = self.getTransform();\r\n\r\n        const tickValues = self.tickValues();\r\n        let axisFunc = self._axisFunc()(transform)\r\n            .tickValues(tickValues)\r\n            .tickFormat(function(value, i) {\r\n                if (self.loga) \r\n                    return Number.isInteger(Math.log10(value))?value:'';\r\n                if (i === tickValues.length - 1) return parseFloat(value.toFixed(self.precision));\r\n                return i % self.minorTicks ? '': parseFloat(value.toFixed(self.precision));\r\n            })\r\n            .tickPadding(10)\r\n            .tickSize(self._tickSize());\r\n        d3.select(svg[0]).select('g.layer')\r\n            .style('transform', self._translate())\r\n            .call(axisFunc);\r\n        d3.select(svg[0]).select('g.layer').selectAll(\"g\")\r\n            .classed('minor', false)\r\n            .filter((value, i) => {\r\n                if (self.loga) \r\n                    return !Number.isInteger(Math.log10(value));\r\n                if (i === tickValues.length - 1) return false;\r\n                return i % self.minorTicks;\r\n            })\r\n            .classed('minor', true);\r\n    }\r\n}\r\n\r\nfunction genLogTickValues(minVal, maxVal) {\r\n    var tickValues = new Array();\r\n    var leftExponent = Math.floor(Math.log10(minVal || 0.01));\r\n    var rightExponent = Math.ceil(Math.log10(maxVal || 0.01));\r\n    for (let i = leftExponent; i <= rightExponent; i++) {\r\n        for (let j = 1; j < 10; j++) {\r\n            let value = j * Math.pow(10, i);\r\n            if (value >= minVal && value <= maxVal)\r\n            tickValues.push(parseFloat(bestNumberFormat(value)));\r\n        }\r\n    }\r\n    return tickValues;\r\n}\r\n\n\n//# sourceURL=webpack:///./axis-layer/index.js?");

/***/ }),

/***/ "./axis-layer/style.css":
/*!******************************!*\
  !*** ./axis-layer/style.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./axis-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./axis-layer/style.css?");

/***/ }),

/***/ "./axis-layer/template.html":
/*!**********************************!*\
  !*** ./axis-layer/template.html ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n    <svg style=\\\"overflow:visible;margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px)\\\">\\r\\n        <g class=\\\"layer\\\"></g>\\r\\n    </svg>\\r\\n</div>\\r\\n\\r\\n\";\n\n//# sourceURL=webpack:///./axis-layer/template.html?");

/***/ }),

/***/ "./barchart-layer/index.js":
/*!*********************************!*\
  !*** ./barchart-layer/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = 'barchartLayer';\r\nmodule.exports.name = name;\r\nmodule.exports.klass = BarchartLayerController;\r\nmodule.exports.component = buildComponent;\r\n\r\n__webpack_require__(/*! ./style.css */ \"./barchart-layer/style.css\");\r\n//var AbstractLayer = require('../abstract-layer');\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer-2d */ \"./abstract-layer-2d/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n\r\nfunction buildComponent(componentData) {\r\n    componentData.controller = componentData.controller || BarchartLayerController;\r\n    componentData.template = componentData.template || __webpack_require__(/*! ./template.html */ \"./barchart-layer/template.html\");\r\n    componentData.bindings = {\r\n        bins: \"<\",\r\n        binGap: \"<\",\r\n        colorFunc: \"<\",\r\n        stackFuncArray: \"<\",\r\n        plotType: \"<\",\r\n        ...componentData.bindings\r\n    }\r\n    return component(componentData);\r\n}\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName)\r\n    .component(name, buildComponent({ }));\r\n\r\nfunction BarchartLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([ \"binGap\", \"plotType\" ]);\r\n\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n    this.defaultBindings = function() {\r\n        this.twoDBindings(this);\r\n        //this.minY = this.minY || 0;\r\n        //this.maxY = this.maxY || 100;\r\n        this.nBins = this.nBins || 5;\r\n        this.binGap = this.binGap === undefined ? 3 : this.binGap;\r\n        this.stackFuncArray = this.stackFuncArray || [];\r\n        this.colorFunc = typeof(this.colorFunc) === \"function\" ? this.colorFunc: () => \"blue\";\r\n    }\r\n    this.doAutofit = function() {\r\n        this.updateMaxY(d3.max(this.bins, function(bin, binIdx) { \r\n            let stackLevel = d3.sum(self.stackFuncArray, (f) => f(bin, binIdx));\r\n            return bin.length + stackLevel; \r\n        }));\r\n    }\r\n    this.draw = function() {\r\n    }\r\n    this.binOffsets = function(bin, binIdx) {\r\n        let transform = this.getTransform();\r\n        let orthoTransform = this.getOrthoTransform();\r\n        let stackLevel = d3.sum(self.stackFuncArray, (f) => f(bin, binIdx));\r\n        let x = transform(bin.x0);\r\n        let y = orthoTransform(bin.length + stackLevel);\r\n        return { x:x, y:y };\r\n    }\r\n    this.binWidth = function(bin, binIdx) {\r\n        let transform = this.getTransform();\r\n        let width = Math.abs(transform(bin.x0) - transform(bin.x1));\r\n        return width >= this.binGap ? width - this.binGap : 0;\r\n    }\r\n    this.binHeight = function(bin, binIdx) {\r\n        let orthoTransform = this.getOrthoTransform();\r\n        let height = this.contentHeight() - orthoTransform(bin.length);\r\n        return height;\r\n    }\r\n    this.binColor = function(bin, binIdx) {\r\n        return this.colorFunc(bin);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./barchart-layer/index.js?");

/***/ }),

/***/ "./barchart-layer/style.css":
/*!**********************************!*\
  !*** ./barchart-layer/style.css ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./barchart-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./barchart-layer/style.css?");

/***/ }),

/***/ "./barchart-layer/template.html":
/*!**************************************!*\
  !*** ./barchart-layer/template.html ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n<svg style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px)\\\">\\r\\n    <g class=\\\"layer\\\">\\r\\n        <g ng-repeat=\\\"bin in self.bins\\\" \\r\\n            ng-offset=\\\"{{self.binOffsets(bin, $index)}}\\\">\\r\\n            <rect ng-x=\\\"{{self.binGap/2}}\\\" ng-y=\\\"0\\\"\\r\\n                ng-width=\\\"{{self.binWidth(bin, $index)}}\\\" \\r\\n                ng-height=\\\"{{self.binHeight(bin, $index)}}\\\"\\r\\n                ng-fill=\\\"{{self.binColor(bin, $index)}}\\\">\\r\\n            </rect>\\r\\n        </g>\\r\\n    </g>\\r\\n</svg>\\r\\n</div>\\r\\n\";\n\n//# sourceURL=webpack:///./barchart-layer/template.html?");

/***/ }),

/***/ "./canvas-barchart-layer/index.js":
/*!****************************************!*\
  !*** ./canvas-barchart-layer/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = 'canvasBarchartLayer';\r\nmodule.exports.name = name;\r\nmodule.exports.klass = CanvasBarchartLayerController;\r\nmodule.exports.component = buildComponent;\r\n\r\n__webpack_require__(/*! ./style.css */ \"./canvas-barchart-layer/style.css\");\r\nconst CanvasHelper = __webpack_require__(/*! ../canvas-helper */ \"./canvas-helper.js\");\r\n//var AbstractLayer = require('../abstract-layer');\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer-2d */ \"./abstract-layer-2d/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n\r\nfunction buildComponent(componentData) {\r\n    componentData.controller = componentData.controller || CanvasBarchartLayerController;\r\n    componentData.template = componentData.template || __webpack_require__(/*! ./template.html */ \"./canvas-barchart-layer/template.html\");\r\n    componentData.bindings = {\r\n        bins: \"<\",\r\n        binGap: \"<\",\r\n        colorFunc: \"<\",\r\n        multiple: \"<\",\r\n        stackFuncArray: \"<\",\r\n        plotType: \"<\",\r\n        ...componentData.bindings\r\n    }\r\n    return component(componentData);\r\n}\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName)\r\n    .component(name, buildComponent({ }));\r\n\r\nfunction CanvasBarchartLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([ \"binGap\", \"plotType\", \"colorFunc\"]);\r\n\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n        $timeout(() => {\r\n            self.bins = self.bins;\r\n        })\r\n    }\r\n    this.defaultBindings = function() {\r\n        this.twoDBindings(this);\r\n        //this.minY = this.minY || 0;\r\n        //this.maxY = this.maxY || 100;\r\n        this.nBins = this.nBins || 5;\r\n        this.binGap = this.binGap === undefined ? 3 : this.binGap;\r\n        this.stackFuncArray = this.stackFuncArray || [];\r\n        this.colorFunc = typeof(this.colorFunc) === \"function\" ? this.colorFunc: () => \"blue\";\r\n    }\r\n    this.doAutofit = function() {\r\n        this.updateMaxY(d3.max(this.bins, function(bin, binIdx) { \r\n            let stackLevel = d3.sum(self.stackFuncArray, (f) => f(bin, binIdx));\r\n            return bin.length + stackLevel; \r\n        }));\r\n    }\r\n\r\n    let _canvas;\r\n    function getCanvas() {\r\n        if (_canvas) return _canvas;\r\n        _canvas = $element.find('canvas')[0];\r\n        return _canvas;\r\n    }\r\n\r\n    this.draw = function() {\r\n        canvas = getCanvas();\r\n        canvas.width = this.contentWidth();\r\n        canvas.height = this.contentHeight();\r\n        let ctx = canvas.getContext('2d');\r\n        let symbolDefaultCfg = {\r\n            size: this.symbolSize,\r\n            fillStyle: 'blue',\r\n            strokeStyle: 'red'\r\n        }\r\n        let helper = new CanvasHelper(ctx, symbolDefaultCfg);\r\n        if (!self.multiple) {\r\n            canvasPlot(self.bins, helper);\r\n        }\r\n        else {\r\n            let stacks = [];\r\n            for (let i = 0; i < self.bins.length; i++) {\r\n                canvasPlot(self.bins[i], helper, stacks);\r\n                for (let j = 0; j < self.bins[i].length; j++){\r\n                    stacks[j] = stacks[j] || 0;\r\n                    stacks[j] += self.plotType !== 'percentage' ? self.bins[i][j].length : self.bins[i][j].length * 100 / _.sum(self.bins.flat().map(bin => bin.length));\r\n                }\r\n            }\r\n        }\r\n        function canvasPlot(bins, helper, stacks) {\r\n            for (let i = 0; i < bins.length; i++) {\r\n                let bin = bins[i];\r\n                let stack = (stacks || [])[i] || 0;\r\n                let w = self.binWidth(bin);\r\n                let h = self.binHeight(bin, i, bins);\r\n                let offset = self.binOffsets(bin, i, stack, bins);\r\n                let x = offset.x + self.binGap/2;\r\n                let y = offset.y;\r\n                let color = self.binColor(bin, i, bins);\r\n                helper.rect(x, y, w, h, {\r\n                    strokeStyle: self.multiple?'#fff':'#000',\r\n                    fillStyle: color\r\n                });\r\n            }\r\n        }\r\n    }\r\n    this.binOffsets = function(bin, binIdx, stack, bins) {\r\n        let transform = this.getTransform();\r\n        let orthoTransform = this.getOrthoTransform();\r\n        let stackLevel = stack || 0;\r\n        let x = transform(bin.x0);\r\n        if (self.minVal > self.maxVal) {\r\n            x = x - self.binWidth(bin, binIdx) - self.binGap;\r\n        }\r\n        let y = orthoTransform((self.plotType !== 'percentage' ? bin.length : bin.length * 100 / _.sum(self.bins.flat().map(bin => bin.length))) + stackLevel);\r\n        return { x:x, y:y };\r\n    }\r\n    this.binWidth = function(bin, binIdx) {\r\n        let transform = this.getTransform();\r\n        let width = Math.abs(transform(bin.x0) - transform(bin.x1));\r\n        return width >= this.binGap ? width - this.binGap : 0;\r\n    }\r\n    this.binHeight = function(bin, binIdx, bins) {\r\n        let orthoTransform = this.getOrthoTransform();\r\n        let y = self.plotType !== 'percentage' ? bin.length : bin.length * 100 / _.sum(self.bins.flat().map(bin => bin.length));\r\n        let height = this.contentHeight() - orthoTransform(y);\r\n        return height;\r\n    }\r\n    this.binColor = function(bin, binIdx, bins) {\r\n        return this.colorFunc(bin, bins, self.params);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./canvas-barchart-layer/index.js?");

/***/ }),

/***/ "./canvas-barchart-layer/style.css":
/*!*****************************************!*\
  !*** ./canvas-barchart-layer/style.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./canvas-barchart-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./canvas-barchart-layer/style.css?");

/***/ }),

/***/ "./canvas-barchart-layer/template.html":
/*!*********************************************!*\
  !*** ./canvas-barchart-layer/template.html ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n<canvas style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px)\\\">\\r\\n</canvas>\\r\\n</div>\\r\\n\";\n\n//# sourceURL=webpack:///./canvas-barchart-layer/template.html?");

/***/ }),

/***/ "./canvas-helper.js":
/*!**************************!*\
  !*** ./canvas-helper.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = CanvasHelper;\r\nfunction CanvasHelper(ctx, config) {\r\n    this.ctx = ctx;\r\n    this.fillStyle = config.fillStyle || 'transparent';\r\n    this.strokeStyle = config.strokeStyle || 'blue';\r\n    this.lineWidth = config.lineWidth || 1;\r\n    this.lineDash = config.lineDash || null;\r\n    this.size = config.size/4 || 2;\r\n}\r\n\r\n/************* CANVAS Drawing functions ****************/\r\nCanvasHelper.prototype.circle = function(x, y, opts = {}) {\r\n    prepare(this, opts);\r\n    let r = opts.pointSize || this.size;\r\n    this.ctx.arc(x, y, r, 0, Math.PI*2, true);\r\n    draw(this);\r\n}\r\n\r\nCanvasHelper.prototype.square = function(x, y, opts = {}) {\r\n    prepare(this, opts);\r\n    let a = opts.pointSize || this.size;\r\n    this.ctx.rect(x-a, y-a, a*2, a*2);\r\n    draw(this);\r\n}\r\n\r\nCanvasHelper.prototype.cross = function(x, y, opts = {}) {\r\n    prepare(this, opts);\r\n    let d = opts.pointSize || this.size;\r\n    this.ctx.moveTo(x-d, y-d);\r\n    this.ctx.lineTo(x+d, y+d);\r\n    this.ctx.moveTo(x-d, y+d);\r\n    this.ctx.lineTo(x+d, y-d);\r\n    draw(this);\r\n}\r\n\r\nCanvasHelper.prototype.diamond = function(x, y, opts = {}) {\r\n    prepare(this, opts);\r\n    let d = opts.pointSize || this.size;\r\n    this.ctx.moveTo(x-d, y);\r\n    this.ctx.lineTo(x, y+d);\r\n    this.ctx.lineTo(x+d, y);\r\n    this.ctx.lineTo(x, y-d);\r\n    this.ctx.closePath();\r\n    draw(this);\r\n}\r\n\r\nCanvasHelper.prototype.plus = function(x, y, opts = {}) {\r\n    prepare(this, opts);\r\n    let d = opts.pointSize || this.size;\r\n    this.ctx.moveTo(x-d, y);\r\n    this.ctx.lineTo(x+d, y);\r\n    this.ctx.moveTo(x, y-d);\r\n    this.ctx.lineTo(x, y+d);\r\n    draw(this);\r\n}\r\n\r\nCanvasHelper.prototype.star = function(x, y, opts = {}) {\r\n    prepare(this, opts);\r\n    let d = opts.pointSize || this.size;\r\n    this.ctx.translate(x, y);\r\n    for (let i = 0; i < 3; i ++) {\r\n        this.ctx.rotate(Math.PI / 3);\r\n        this.ctx.moveTo(-d, 0)\r\n        this.ctx.lineTo(+d, 0);\r\n    }\r\n    draw(this);\r\n}\r\n\r\nCanvasHelper.prototype.textSymbol = function (x, y, opts = {}) {\r\n    if (!opts.textContent) return;\r\n    let s = opts.textSize || 10;\r\n    this.ctx.save();\r\n    this.ctx.font = `${s}px ${opts.fontFamily || 'Verdana'}`;\r\n    this.ctx.textBaseline = opts.verticalAlign || 'top';\r\n    this.ctx.textAlign = opts.textAlign || 'start';\r\n    this.ctx.fillStyle = opts.fillStyle || this.fillStyle;\r\n    this.ctx.fillText(opts.textContent, x, y);\r\n    this.ctx.restore();\r\n}\r\n\r\nCanvasHelper.prototype.rect = function(x, y, width, height, opts = {}) {\r\n    prepare(this, opts);\r\n    this.ctx.rect(x, y, width, height);\r\n    draw(this);\r\n}\r\n\r\nCanvasHelper.prototype.segment = function(start, stop, opts = {}) {\r\n    if (!_.isFinite(start.x + start.y + stop.x + stop.y)) return;\r\n    prepare(this, opts);\r\n    this.ctx.moveTo(start.x, start.y);\r\n    this.ctx.lineTo(stop.x, stop.y);\r\n    this.ctx.stroke();\r\n}\r\n/********************** END *********************/\r\nfunction prepare(canvas, opts = {}) {\r\n    let ctx = canvas.ctx;\r\n    ctx.save();\r\n\r\n    ctx.beginPath();\r\n    ctx.fillStyle = opts.fillStyle || canvas.fillStyle;\r\n    ctx.strokeStyle = opts.strokeStyle || canvas.strokeStyle;\r\n    ctx.lineWidth = opts.lineWidth || canvas.lineWidth;\r\n    let lineDash = opts.lineDash || canvas.lineDash;\r\n    if (lineDash)\r\n        ctx.setLineDash(lineDash);\r\n}\r\n\r\nfunction draw(canvas) {\r\n    let ctx = canvas.ctx;\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.restore();\r\n}\r\n\n\n//# sourceURL=webpack:///./canvas-helper.js?");

/***/ }),

/***/ "./click-layer/index.js":
/*!******************************!*\
  !*** ./click-layer/index.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = 'clickLayer';\r\nmodule.exports.name = name;\r\n\r\n//var AbstractLayer = require('../interactive-layer');\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer-2d */ \"./abstract-layer-2d/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\nconst _ = __webpack_require__(/*! lodash */ \"../node_modules/lodash/lodash.js\");\r\n\r\n__webpack_require__(/*! ./style.css */ \"./click-layer/style.css\");\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName)\r\n    .component(name, component({\r\n        template: __webpack_require__(/*! ./template.html */ \"./click-layer/template.html\"),\r\n        controller: ClickLayerController,\r\n        bindings: {\r\n            pointerStyle: \"<\",\r\n            pointerSize: \"<\",\r\n            coordinateX: \"<\",\r\n            coordinateY: \"<\",\r\n            clickHandler: \"<\"\r\n        }\r\n    }));\r\n\r\nfunction ClickLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    let dragging = false;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n    this.watchProperties = this.watchProperties.concat([\r\n        'coordinateX', 'coordinateY', \r\n        'pointerSize', 'pointerStyle'\r\n    ]);\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n    this.defaultBindings = function() {\r\n        this.pointerSize = this.pointerSize || 5;\r\n        this.pointerStyle =  this.pointerStyle || {stroke:'blue', 'stroke-width':1, fill:'lightblue'}\r\n    }\r\n    this.doAutofit = function() { }\r\n    this.draw = function() { }\r\n    this.getPointerStyle = function() {\r\n        if (!this.coordinateX || !this.coordinateY)\r\n        return {\r\n            display: 'none'\r\n        }\r\n        return this.pointerStyle;\r\n    }\r\n    this.getPointerInfoStyle = function() {\r\n        if (!this.coordinateX || !this.coordinateY)\r\n        return {\r\n            display: 'none'\r\n        }\r\n        return {\r\n            display: 'block'\r\n        };\r\n    }\r\n    this.pointerCoordinates = function() {\r\n        return `X:${this.coordinateX}; Y:${this.coordinateY}`;\r\n    }\r\n    this.pointerOffset = function() {\r\n        if (!_.isFinite(this.coordinateX) || !_.isFinite(this.coordinateY)) return {x:0, y:0};\r\n        let transformX = this.getTransform();\r\n        let transformY = this.getOrthoTransform();\r\n        return {\r\n            x: transformX(this.coordinateX),\r\n            y: transformY(this.coordinateY)\r\n        }\r\n    }\r\n    this.onMouseClick = function($event) {\r\n        let transformX = this.getTransform();\r\n        let transformY = this.getOrthoTransform();\r\n        let xPixel = $event.offsetX;\r\n        let yPixel = $event.offsetY;\r\n        let coordinateX = transformX.invert(xPixel);\r\n        let coordinateY = transformY.invert(yPixel);\r\n        this.clickHandler && this.clickHandler(coordinateX, coordinateY, transformX, transformY);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./click-layer/index.js?");

/***/ }),

/***/ "./click-layer/style.css":
/*!*******************************!*\
  !*** ./click-layer/style.css ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./click-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./click-layer/style.css?");

/***/ }),

/***/ "./click-layer/template.html":
/*!***********************************!*\
  !*** ./click-layer/template.html ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n    <svg class=\\\"clickable\\\" \\r\\n        style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.bottomPadding() + self.topPadding()}}px)\\\"\\r\\n        ng-click=\\\"self.onMouseClick($event)\\\">\\r\\n        <g class=\\\"layer\\\">\\r\\n            <circle cx=\\\"0\\\" cy=\\\"0\\\" ng-r=\\\"{{self.pointerSize}}\\\" ng-style=\\\"self.getPointerStyle()\\\" ng-offset=\\\"{{self.pointerOffset()}}\\\"></circle>\\r\\n        </g>\\r\\n    </svg>\\r\\n</div>\\r\\n<!-- <div ng-show=\\\"self.xCoordinate && self.yCoordinate\\\" ng-bind=\\\"self.pointerCoordinates()\\\"></div> -->\\r\\n\";\n\n//# sourceURL=webpack:///./click-layer/template.html?");

/***/ }),

/***/ "./common.js":
/*!*******************!*\
  !*** ./common.js ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports.bestNumberFormat = bestNumberFormat;\r\nmodule.exports.findLinearEqn = findLinearEqn;\r\nmodule.exports.parseFormulaLatex = parseFormulaLatex;\r\nmodule.exports.distance = distance;\r\nmodule.exports.findClosest = findClosest;\r\n\r\nfunction bestNumberFormat(x, digits = 0) {\r\n    if (!x) return x;\r\n    let ex = Math.abs(x / 100);\r\n    let n = -Math.round(Math.log10(ex));\r\n    n = n>=digits?n:digits;\r\n    return (Math.round(x*(10**n))/(10**n)).toFixed(n);\r\n}\r\n\r\nfunction findLinearEqn(p1, p2, loga, orthoLoga) {\r\n    let p1X, p1Y, p2X, p2Y;\r\n    if (loga) {\r\n        p1X = Math.log10(p1.x);\r\n        p1Y = Math.log10(p1.y);\r\n    } else {\r\n        p1X = p1.x;\r\n        p1Y = p1.y;\r\n    }\r\n    if (orthoLoga) {\r\n        p2X = Math.log10(p2.x);\r\n        p2Y = Math.log10(p2.y);\r\n    } else {\r\n        p2X = p2.x;\r\n        p2Y = p2.y;\r\n    }\r\n    if (p1X != p2X) {\r\n        let slope = (p1Y - p2Y)/(p1X - p2X);\r\n        let intercept = p1Y - slope * p1X;\r\n        return {\r\n            family:'linear', slope: slope, intercept: intercept\r\n        }\r\n    }\r\n    return {\r\n        family: 'const', x: p1X\r\n    }\r\n}\r\n//function findLinearEqn(p1, p2) {\r\n    //if (p1.x != p2.x) {\r\n        //let slope = (p1.y - p2.y)/(p1.x - p2.x);\r\n        //let intercept = p1.y - slope * p1.x;\r\n        //return {\r\n            //family:'linear', slope: slope, intercept: intercept\r\n        //}\r\n    //}\r\n    //return {\r\n        //family: 'const', x: p1.x\r\n    //}\r\n//}\r\n\r\nfunction parseFormulaLatex(formula) {\r\n    let latex = formula.latex || '';\r\n    switch(formula.family) {\r\n        case \"const\":\r\n            latex = `x = ${formula.x}`;\r\n            break;\r\n        case \"linear\":\r\n            let intercept = formula.intercept;\r\n            let slopeStr = bestNumberFormat(formula.slope, 4);\r\n            let interceptStr = bestNumberFormat(Math.abs(formula.intercept), 4);\r\n            latex = `y = ${slopeStr} \\\\times x ${intercept==0?'':(intercept<0 ? '-' + interceptStr:'+' + interceptStr)}; R^2=${bestNumberFormat(formula.r2, 4)}`;\r\n            break;\r\n        case \"exponential\":\r\n            latex = `y = ${bestNumberFormat(formula.ae, 4)} \\\\times e^\\{${bestNumberFormat(formula.b, 4)} x\\}; R^2=${bestNumberFormat(formula.r2, 4)}`;\r\n            break;\r\n        case \"power\":\r\n            latex = `y = ${bestNumberFormat(formula.coefficient, 4)} \\\\times x^\\{${bestNumberFormat(formula.exponent, 4)}\\}; R^2=${bestNumberFormat(formula.r2, 4)}`;\r\n            break;\r\n        case \"mse\":\r\n            latex = `MSE = ${bestNumberFormat(formula.mse, 4)}`;\r\n            break;\r\n    }\r\n    return latex.replace(/\\+\\-/g, '-');\r\n}\r\n\r\nfunction distance(p1, p2) {\r\n    return Math.sqrt((p1.x - p2.x)**2 + (p1.y - p2.y)**2);\r\n}\r\nfunction findClosest(p, points) {\r\n    let minDistance = 100000;\r\n    let minIdx = undefined;\r\n    for (let i = 0; i < points.length; i++) {\r\n        let d = distance(p, points[i]);\r\n        if (d < minDistance) {\r\n            minDistance = d;\r\n            minIdx = i;\r\n        }\r\n    }\r\n    return {\r\n        distance: minDistance,\r\n        idx : minIdx\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./common.js?");

/***/ }),

/***/ "./control-marker-layer/index.js":
/*!***************************************!*\
  !*** ./control-marker-layer/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = \"controlMarkerLayer\";\r\nmodule.exports.name = name;\r\n\r\n__webpack_require__(/*! ./style.css */ \"./control-marker-layer/style.css\");\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer */ \"./abstract-layer/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName).component(name, component({\r\n    controller: ControlMarkerLayerController, \r\n    template: __webpack_require__(/*! ./template.html */ \"./control-marker-layer/template.html\"),\r\n    bindings: {\r\n        markers: \"<\",\r\n        markersMask: '<',\r\n        draggable: \"<\",\r\n        markerStyle: \"<\",\r\n        getMarkerStyleFn: \"<\",\r\n        markerWidth: \"<\",\r\n        getMarkerValue: \"<\",\r\n        setMarkerValue: \"<\",\r\n        getMarkerName: \"<\",\r\n        orderFree: \"<\",\r\n        notUseBackground: '<',\r\n        onMarkerDragEnd: \"<\"\r\n    }\r\n}));\r\nfunction ControlMarkerLayerController($timeout, $element, $scope ) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([\r\n        \"markers\",\r\n        \"markerStyle\",\r\n        \"markerWidth\",\r\n        \"getMarkerValue\",\r\n        \"setMarkerValue\",\r\n        \"draggable\",\r\n        \"notUseBackground\"\r\n    ]);\r\n    this.defaultBindings = function() {\r\n        this.getMarkerStyleFn = this.getMarkerStyleFn || function() {return undefined};\r\n        this.markerStyle = typeof(this.markerStyle) === 'object'?this.markerStyle:{stroke:\"green\", \"stroke-width\": 2,\"fill\":\"none\"};\r\n        this.markerWidth = this.markerWidth || 19;\r\n        this.draggable = this.draggable || false;\r\n        this.notUseBackground = this.notUseBackground === undefined ? true : this.notUseBackground;\r\n    }\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n    this.draw = function() {\r\n    }\r\n    this.markerOffset = function(marker, idx) {\r\n        let transform = this.getTransform();\r\n        switch(this.axisDirection) {\r\n        case \"left\":\r\n        case \"right\":\r\n            return {\r\n                x: transform(self.getMarkerValue(marker, idx)) - self.markerWidth/2 || 0,\r\n                y: 0\r\n            }\r\n        case \"up\":\r\n        case \"down\":\r\n            return {\r\n                x: 0,\r\n                y: transform(self.getMarkerValue(marker, idx)) - self.markerWidth/2 || 0\r\n            }\r\n        }\r\n    }\r\n    this.dragStart = function(marker, $event, $index) {\r\n        if (!this.draggable) return;\r\n        $event.stopPropagation();\r\n        $event.preventDefault();\r\n        marker.dragging = true;\r\n        switch(this.axisDirection) {\r\n        case \"left\":\r\n        case \"right\":\r\n            marker.startX = $event.offsetX;\r\n            break;\r\n        case \"up\":\r\n        case \"down\":\r\n            marker.startY = $event.offsetY;\r\n            break;\r\n        }\r\n    }\r\n    this.dragEnd = function($event) {\r\n        self.onMarkerDragEnd && self.onMarkerDragEnd();\r\n        this.markers.forEach((m) => {\r\n            m.dragging = false;\r\n            delete m.startX;\r\n            delete m.startY;\r\n        });\r\n    }\r\n    this.dragging = function($event) {\r\n        switch(this.axisDirection) {\r\n        case \"left\":\r\n        case \"right\":\r\n            return this.xDragging($event);\r\n        case \"up\":\r\n        case \"down\":\r\n            return this.yDragging($event);\r\n        }\r\n    }\r\n    this.xDragging = function($event) {\r\n        for (let i = 0; i < this.markers.length; i++) {\r\n            if (!this.markers[i].dragging) continue;\r\n\r\n            let marker = this.markers[i];\r\n            let offset = $event.offsetX - marker.startX;\r\n            let x = this.getTransform()(this.getMarkerValue(marker, i)) - this.markerWidth/2 + offset;\r\n            let value = this.getTransform().invert(x + this.markerWidth/2);\r\n            let lowerMarkerVal = this.minVal;\r\n            let higherMarkerVal = this.maxVal;\r\n            if (!self.orderFree) {\r\n                lowerMarkerVal = this.markers[i-1] ? this.getMarkerValue(this.markers[i-1], i-1):this.minVal;\r\n                higherMarkerVal = this.markers[i+1] ? this.getMarkerValue(this.markers[i+1], i+1):this.maxVal;\r\n            }\r\n            if ( (value - lowerMarkerVal) * ( value -  higherMarkerVal) >= 0) continue;\r\n            this.setMarkerValue(marker, i, value);\r\n            marker.startX = $event.offsetX;\r\n        }\r\n    }\r\n    this.yDragging = function($event) {\r\n        for (let i = 0; i < this.markers.length; i++) {\r\n            if (!this.markers[i].dragging) continue;\r\n\r\n            let marker = this.markers[i];\r\n            let offset = $event.offsetY - marker.startY;\r\n            let y = this.getTransform()(this.getMarkerValue(marker, i)) - this.markerWidth/2 + offset;\r\n            let value = this.getTransform().invert(y + this.markerWidth/2);\r\n\r\n            let lowerMarkerVal = this.minVal;\r\n            let higherMarkerVal = this.maxVal;\r\n            if (!self.orderFree) {\r\n                lowerMarkerVal = this.markers[i-1] ? this.getMarkerValue(this.markers[i-1], i-1):this.minVal;\r\n                higherMarkerVal = this.markers[i+1] ? this.getMarkerValue(this.markers[i+1], i+1):this.maxVal;\r\n            }\r\n\r\n           // let lowerMarkerVal = this.markers[i - 1]?this.getMarkerValue(this.markers[i - 1], i - 1):this.minVal;\r\n           // let higherMarkerVal = this.markers[i + 1]?this.getMarkerValue(this.markers[i + 1], i + 1):this.maxVal;\r\n            if ( (value - lowerMarkerVal) * ( value -  higherMarkerVal) >= 0) continue;\r\n            this.setMarkerValue(marker, i, value);\r\n            marker.startY = $event.offsetY;\r\n        }\r\n    }\r\n    this.markerMouseOver = function($event, marker, idx) {\r\n        if (!this.draggable) return;\r\n        marker.opacity = 1; \r\n        $timeout(() => {\r\n            switch(self.axisDirection) { \r\n                case \"left\":\r\n                case \"right\":\r\n                    marker.handlePos = $event.offsetY - self.markerWidth/2;\r\n                    break;\r\n                case \"up\":\r\n                case \"down\":\r\n                    marker.handlePos = $event.offsetX - self.markerWidth/2;\r\n                    break;\r\n            }\r\n        }); \r\n    }\r\n    let __cursorStyle = {};\r\n    this.getCursorStyle = function() {\r\n        Object.keys(__cursorStyle).forEach(key => delete __cursorStyle[key]);\r\n        if (!this.draggable) {\r\n            Object.assign(__cursorStyle, { cursor: 'default'});\r\n            return __cursorStyle;\r\n        }\r\n        switch (this.axisDirection) {\r\n        case \"left\":\r\n        case \"right\":\r\n            Object.assign(__cursorStyle, {cursor: 'ew-resize'});\r\n            return __cursorStyle;\r\n        case \"up\":\r\n        case \"down\":\r\n            Object.assign(__cursorStyle, {cursor: 'ns-resize'});\r\n            return __cursorStyle;\r\n        }\r\n    }\r\n    this.getSVGStyle = function() {\r\n        return {\r\n            'background-color': !self.notUseBackground ? 'rgba(255, 249, 160, 0.6)' : 'transparent'\r\n        };\r\n    }\r\n\r\n    this.getMarkerStyle = function(marker, idx) {\r\n        return self.getMarkerStyleFn(marker, idx) || self.markerStyle;\r\n    }\r\n    let __markerKnobStyle = {};\r\n    this.markerKnobStyle = function(marker, idx) {\r\n        Object.keys(__markerKnobStyle).forEach(key => delete __markerKnobStyle);\r\n        Object.assign(__markerKnobStyle, {\r\n            opacity: marker.opacity || 0,\r\n            ...(this.getMarkerStyle(marker, idx))\r\n        });\r\n        return __markerKnobStyle;\r\n    }\r\n\r\n    this.isMarkerVisible = function($index) {\r\n        if (!self.markersMask || !self.markersMask.length) {\r\n            return true;\r\n        }\r\n        return self.markersMask[$index];\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./control-marker-layer/index.js?");

/***/ }),

/***/ "./control-marker-layer/style.css":
/*!****************************************!*\
  !*** ./control-marker-layer/style.css ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./control-marker-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./control-marker-layer/style.css?");

/***/ }),

/***/ "./control-marker-layer/template.html":
/*!********************************************!*\
  !*** ./control-marker-layer/template.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n    <svg style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px); background-color: {{self.getSVGStyle()['background-color']}}\\\"\\r\\n        ng-mouseup=\\\"self.dragEnd($event)\\\" ng-mousemove=\\\"self.dragging($event)\\\">\\r\\n        <g ng-repeat=\\\"marker in self.markers track by $index\\\"\\r\\n            ng-show=\\\"self.isMarkerVisible($index)\\\"\\r\\n            ng-style=\\\"self.getCursorStyle()\\\"\\r\\n            ng-offset=\\\"{{self.markerOffset(marker, $index)}}\\\"\\r\\n            ng-mousedown=\\\"self.dragStart(marker, $event, $index)\\\"\\r\\n            ng-mouseover=\\\"self.markerMouseOver($event, marker,$index)\\\" ng-mouseleave=\\\"marker.opacity = null;\\\">\\r\\n            <line ng-if=\\\"self.axisDirection === 'right' || self.axisDirection === 'left'\\\"\\r\\n                ng-x1=\\\"{{self.markerWidth/2}}\\\" \\r\\n                ng-x2=\\\"{{self.markerWidth/2}}\\\" \\r\\n                y1=\\\"0\\\" \\r\\n                ng-y2=\\\"{{self.contentHeight(true)}}\\\" \\r\\n                ng-style=\\\"{{self.getMarkerStyle(marker, $index)}}\\\"/>\\r\\n            <line ng-if=\\\"self.axisDirection === 'up' || self.axisDirection === 'down'\\\"\\r\\n                ng-y1=\\\"{{self.markerWidth/2}}\\\" \\r\\n                ng-y2=\\\"{{self.markerWidth/2}}\\\" \\r\\n                x1=\\\"0\\\" \\r\\n                ng-x2=\\\"{{self.contentWidth(true)}}\\\" \\r\\n                ng-style=\\\"{{self.getMarkerStyle(marker, $index)}}\\\"/>\\r\\n            <rect ng-if=\\\"self.axisDirection === 'right' || self.axisDirection === 'left'\\\" \\r\\n                x=\\\"0\\\" y=\\\"0\\\" \\r\\n                ng-width=\\\"{{self.markerWidth}}\\\" ng-height=\\\"{{self.markerWidth}}\\\"\\r\\n                ng-offset=\\\"{{ {x: 0, y: marker.handlePos || (self.contentHeight() - self.markerWidth)/2 } }}\\\"\\r\\n                ng-style=\\\"self.markerKnobStyle(marker, $index)\\\"/>\\r\\n            <rect ng-if=\\\"self.axisDirection === 'up' || self.axisDirection === 'down'\\\" \\r\\n                x=\\\"0\\\" y=\\\"0\\\" \\r\\n                ng-width=\\\"{{self.markerWidth}}\\\" ng-height=\\\"{{self.markerWidth}}\\\"\\r\\n                ng-offset=\\\"{{ {y: 0, x: marker.handlePos || (self.contentWidth() - self.markerWidth)/2 } }}\\\"\\r\\n                ng-style=\\\"self.markerKnobStyle(marker, $index)\\\"/>\\r\\n            <text ng-if=\\\"self.getMarkerName\\\" ng-offset=\\\"{{ {x: 20, y:20 * ($index + 1)} }}\\\" fill=\\\"black\\\">\\r\\n                {{self.getMarkerName(marker, $index)}}\\r\\n            </text>\\r\\n        </g>\\r\\n    </svg>\\r\\n</div>\\r\\n\";\n\n//# sourceURL=webpack:///./control-marker-layer/template.html?");

/***/ }),

/***/ "./curve-view-layer/index.js":
/*!***********************************!*\
  !*** ./curve-view-layer/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = 'curveViewLayer';\r\nmodule.exports.name = name;\r\nmodule.exports.klass = curveViewLayerController;\r\nmodule.exports.component = buildComponent;\r\n\r\n__webpack_require__(/*! ./style.css */ \"./curve-view-layer/style.css\");\r\nconst AbstractLayer = __webpack_require__(/*! ../abstract-layer-2d */ \"./abstract-layer-2d/index.js\");\r\nconst AbstractLayerController = AbstractLayer.klass;\r\nconst component = AbstractLayer.component;\r\n\r\nfunction buildComponent(componentData) {\r\n    componentData.controller = componentData.controller || curveViewLayerController;\r\n    componentData.template = componentData.template || __webpack_require__(/*! ./template.html */ \"./curve-view-layer/template.html\");\r\n    componentData.bindings = {\r\n        curveData: \"<\",\r\n        ...componentData.bindings\r\n    }\r\n    return component(componentData);\r\n}\r\nangular.module(moduleName)\r\n    .component(name, buildComponent({ }));\r\n\r\nfunction curveViewLayerController($timeout, $element, $scope) {\r\n    const self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n    this.watchProperties = this.watchProperties.concat([\"curveData\"]);\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n\r\n    let _canvas;\r\n    function getCanvas() {\r\n        if (_canvas) return _canvas;\r\n        _canvas = $element.find('canvas')[0];\r\n        return _canvas;\r\n    }\r\n\r\n    this.defaultBindings = function() {\r\n        this.twoDBindings(this);\r\n    }\r\n\r\n    this.draw = function() {\r\n        console.log(self.curveData);\r\n        canvas = getCanvas();\r\n        canvas.width = self.contentWidth();\r\n        canvas.height = self.contentHeight();\r\n        let ctx = canvas.getContext('2d');\r\n        const tfX = self.getTransform();    \r\n        const tfY = self.getOrthoTransform();\r\n        ctx.strokeStyle = 'black';\r\n        ctx.beginPath();\r\n        self.curveData.forEach((datum, i) => {\r\n            if (i == 0) {\r\n                ctx.moveTo(tfX(datum.x), tfY(datum.y));\r\n            } else {\r\n                ctx.lineTo(tfX(datum.x), tfY(datum.y));\r\n            }\r\n        })\r\n        ctx.stroke();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./curve-view-layer/index.js?");

/***/ }),

/***/ "./curve-view-layer/style.css":
/*!************************************!*\
  !*** ./curve-view-layer/style.css ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./curve-view-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./curve-view-layer/style.css?");

/***/ }),

/***/ "./curve-view-layer/template.html":
/*!****************************************!*\
  !*** ./curve-view-layer/template.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n<canvas style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px)\\\">\\r\\n</canvas>\\r\\n</div>\";\n\n//# sourceURL=webpack:///./curve-view-layer/template.html?");

/***/ }),

/***/ "./heat-map/index.js":
/*!***************************!*\
  !*** ./heat-map/index.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = 'heatMap';\r\nmodule.exports.name = name;\r\nmodule.exports.klass = heatMapController;\r\nmodule.exports.component = buildComponent;\r\n\r\n__webpack_require__(/*! ./style.css */ \"./heat-map/style.css\");\r\nconst AbstractLayer = __webpack_require__(/*! ../abstract-layer-2d */ \"./abstract-layer-2d/index.js\");\r\nconst AbstractLayerController = AbstractLayer.klass;\r\nconst component = AbstractLayer.component;\r\nvar CanvasHelper = __webpack_require__(/*! ../canvas-helper */ \"./canvas-helper.js\");\r\n\r\nfunction buildComponent(componentData) {\r\n    componentData.controller = componentData.controller || heatMapController;\r\n    componentData.template = componentData.template || __webpack_require__(/*! ./template.html */ \"./heat-map/template.html\");\r\n    componentData.bindings = {\r\n        nRow: \"<\",\r\n        nCol: \"<\",\r\n        cellColorFn: \"<\",\r\n        cellValueFn: \"<\",\r\n        ...componentData.bindings\r\n    }\r\n    return component(componentData);\r\n}\r\nangular.module(moduleName)\r\n    .component(name, buildComponent({ }));\r\n\r\nfunction heatMapController($timeout, $element, $scope) {\r\n    const self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n    this.watchProperties = this.watchProperties.concat([\"nRow\", \"nCol\", \"cellColorFn\", \"cellValueFn\"]);\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n\r\n    let _canvas;\r\n    function getCanvas() {\r\n        if (_canvas) return _canvas;\r\n        _canvas = $element.find('canvas')[0];\r\n        return _canvas;\r\n    }\r\n\r\n    this.defaultBindings = function() {\r\n        this.twoDBindings(this);\r\n        this.nRow = this.nRow || 0;\r\n        this.nCol = this.nCol || 0;\r\n        this.cellColorFn = typeof(this.cellColorFn) == \"function\" ? this.cellColorFn : () => \"transparent\";\r\n        this.cellValueFn = typeof(this.cellValueFn) == \"function\" ? this.cellValueFn : () => 0;\r\n    }\r\n\r\n    this.draw = function() {\r\n        canvas = getCanvas();\r\n        canvas.width = self.contentWidth();\r\n        canvas.height = self.contentHeight();\r\n        let ctx = canvas.getContext('2d');\r\n        let helper = new CanvasHelper(ctx, {\r\n            fillStyle: '#000',\r\n            strokeStyle: '#000'\r\n        });\r\n\r\n        const textConfig = {\r\n            textAlign: 'center',\r\n            verticalAlign: 'middle',\r\n            fontFamily: \"Sans Serif\",\r\n            textSize: 14\r\n        }\r\n        if (canvas.width > 0 && canvas.height > 0 && self.nRow > 0 && self.nCol > 0) {\r\n            const arr = new Array(self.nRow * self.nCol).fill(0);\r\n            const xTf = self.getTransform();\r\n            const yTf = self.getOrthoTransform();\r\n            const xStep = (self.maxVal - self.minVal) / self.nCol;\r\n            const yStep = (self.maxY - self.minY) / self.nRow;\r\n            const xTicks = d3.range(self.minVal, self.maxVal + xStep, xStep);\r\n            const yTicks = d3.range(self.minY, self.maxY + yStep, yStep);\r\n            xTicks.forEach((xValue, iCol) => {\r\n                yTicks.forEach((yValue, iRow) => {\r\n                    const iCell = iRow * self.nCol + iCol;\r\n                    const x = xTf(xValue);\r\n                    const y = yTf(yValue);\r\n                    const nextXValue = xTicks[iCol + 1];\r\n                    const nextYValue = yTicks[iRow + 1];\r\n                    if (nextXValue && nextYValue) {\r\n                        arr[iCell] = self.cellValueFn(iCell, iRow, iCol);\r\n                        const nextX = xTf(nextXValue);\r\n                        const nextY = yTf(nextYValue);\r\n                        const width = nextX - x;\r\n                        const height = nextY - y;\r\n                        helper.rect(x, y, width, height, { fillStyle: self.cellColorFn(iCell, iRow, iCol), strokeStyle: 'transparent' });\r\n                        helper.textSymbol( x + width / 2, y + height / 2, { textContent: arr[iCell], ...textConfig });\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack:///./heat-map/index.js?");

/***/ }),

/***/ "./heat-map/style.css":
/*!****************************!*\
  !*** ./heat-map/style.css ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./heat-map/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./heat-map/style.css?");

/***/ }),

/***/ "./heat-map/template.html":
/*!********************************!*\
  !*** ./heat-map/template.html ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n<canvas style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px)\\\">\\r\\n</canvas>\\r\\n</div>\";\n\n//# sourceURL=webpack:///./heat-map/template.html?");

/***/ }),

/***/ "./histogram-layer/index.js":
/*!**********************************!*\
  !*** ./histogram-layer/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = 'histogramLayer';\r\nmodule.exports.name = name;\r\n\r\nvar AbstractLayer = __webpack_require__(/*! ../barchart-layer */ \"./barchart-layer/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName)\r\n    .component(name, component({\r\n        controller: HistogramLayerController,\r\n        bindings: {\r\n            points: \"<\",\r\n            getPointVal: \"<\",\r\n            binCount: \"<\"\r\n        }\r\n    }));\r\n\r\nfunction HistogramLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([ 'binCount' ]);\r\n\r\n    function refresh() {\r\n        self.getTransform(true);\r\n        self.genBins();\r\n    }\r\n    this.registerWatch(() => refresh());\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n    this.genBins = function () {\r\n        if (!this.points || !this.points.length) return;\r\n        let thresholds;\r\n        if (!this.loga)\r\n            thresholds = d3.range(this.minVal, this.maxVal, (this.maxVal - this.minVal)/this.binCount);\r\n        else {\r\n            let logMinVal = Math.log10(this.minVal || 0.01);\r\n            let logMaxVal = Math.log10(this.maxVal || 0.01);\r\n            thresholds = d3.range(logMinVal, logMaxVal, (logMaxVal - logMinVal)/this.binCount).map(v => Math.pow(10, v)); \r\n        }\r\n        let histGen = d3.histogram().domain([this.minVal, this.maxVal]).thresholds(thresholds);\r\n        this.bins = histGen(this.points.map(function(p, i) { return self.getPointVal(p,i); }));\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./histogram-layer/index.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./plot-toolkit-module */ \"./plot-toolkit-module.js\");\r\nmodule.exports = {\r\n    AxisLayer: __webpack_require__(/*! ./axis-layer */ \"./axis-layer/index.js\"),\r\n    BarchartLayer : __webpack_require__(/*! ./barchart-layer */ \"./barchart-layer/index.js\"),\r\n    CanvasBarchartLayer : __webpack_require__(/*! ./canvas-barchart-layer */ \"./canvas-barchart-layer/index.js\"),\r\n    HistogramLayer : __webpack_require__(/*! ./histogram-layer */ \"./histogram-layer/index.js\"),\r\n    LineBinLayer : __webpack_require__(/*! ./line-bin-layer */ \"./line-bin-layer/index.js\"),\r\n    LinePointLayer : __webpack_require__(/*! ./line-point-layer */ \"./line-point-layer/index.js\"),\r\n    LineFormulaLayer : __webpack_require__(/*! ./line-formula-layer */ \"./line-formula-layer/index.js\"),\r\n    LineGaussianLayer : __webpack_require__(/*! ./line-gaussian-layer */ \"./line-gaussian-layer/index.js\"),\r\n    ControlMarkerLayer : __webpack_require__(/*! ./control-marker-layer */ \"./control-marker-layer/index.js\"),\r\n    ScatterLayer : __webpack_require__(/*! ./scatter-layer */ \"./scatter-layer/index.js\"),\r\n    SegmentLayer : __webpack_require__(/*! ./segment-layer */ \"./segment-layer/index.js\"),\r\n    ClickLayer : __webpack_require__(/*! ./click-layer */ \"./click-layer/index.js\"),\r\n    PolygonLayer : __webpack_require__(/*! ./polygon-layer */ \"./polygon-layer/index.js\"),\r\n    OverlayLineLayer: __webpack_require__(/*! ./overlay-line-layer */ \"./overlay-line-layer/index.js\"),\r\n    TooltipLayer: __webpack_require__(/*! ./tooltip-layer */ \"./tooltip-layer/index.js\"),\r\n    heatMap: __webpack_require__(/*! ./heat-map */ \"./heat-map/index.js\"),\r\n    curveViewLayer: __webpack_require__(/*! ./curve-view-layer */ \"./curve-view-layer/index.js\")\r\n// \t,\r\n//    LayerWrapper : require('./layer-wrapper'),\r\n//    LayerArray : require('./layer-array')\r\n}\r\nwindow.mathGeo = __webpack_require__(/*! ./common */ \"./common.js\");\r\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./interactive-layer/index.js":
/*!************************************!*\
  !*** ./interactive-layer/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports.name = name;\r\nmodule.exports.klass = InteractiveLayerController;\r\nmodule.exports.component = buildComponent;\r\n\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer-2d */ \"./abstract-layer-2d/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n\r\nlet bestNumberFormat = __webpack_require__(/*! ../common */ \"./common.js\").bestNumberFormat;\r\n\r\n__webpack_require__(/*! ./style.css */ \"./interactive-layer/style.css\");\r\nfunction buildComponent(componentData) {\r\n    componentData.template = componentData.template || __webpack_require__(/*! ./template.html */ \"./interactive-layer/template.html\");\r\n    componentData.bindings = {\r\n        fillStyle: \"<\",\r\n        draggerStyle: '<',\r\n        strokeStyle: \"<\",\r\n        strokeWidth: \"<\",\r\n        editPointIdx: \"<\",\r\n        points: \"<\",\r\n        getXFn: \"<\",\r\n        getYFn: \"<\",\r\n        setXFn: \"<\",\r\n        setYFn: \"<\",\r\n        getPointLabel: \"<\",\r\n        mode : \"<\",\r\n        showVertex: '<',\r\n        showCoordinates: '<',\r\n        ...componentData.bindings\r\n    }\r\n    return component(componentData);\r\n}\r\n\r\nfunction InteractiveLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    let dragging = false;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n    this.watchProperties = this.watchProperties.concat([ \"fillStyle\", \"strokeStyle\", 'strokeWidth' ]);\r\n    this.interactiveBindings = function() {\r\n        this.twoDBindings();\r\n        this.fillStyle = this.fillStyle || \"rgba(255,255, 64, 0.5)\";\r\n        this.strokeStyle = this.strokeStyle || \"teal\";\r\n        this.strokeWidth = this.strokeWidth || \"2\";\r\n        this.editPointIdx = this.editPointIdx || null;\r\n        this.mode = this.mode || null;\r\n        this.points = this.points || [];\r\n        this.getXFn = this.getXFn || function(point, idx, points) {\r\n            return point.x;\r\n        }\r\n        this.getYFn = this.getYFn || function(point, idx, points) {\r\n            return point.y;\r\n        }\r\n        this.setXFn = this.setXFn || function(point, value) {\r\n            point.x = value;\r\n        }\r\n        this.setYFn = this.setYFn || function(point, value) {\r\n            point.y = value;\r\n        }\r\n        this.getPointLabel = this.getPointLabel || function(point) {\r\n            return `${point.x}-${point.y}`;\r\n        }\r\n    }\r\n\r\n    this.mouseDownAddPoint = function($event) {\r\n    }\r\n    this.mouseDownDelPoint = function($event) {\r\n    }\r\n\r\n    this.onMouseDown = function($event) {\r\n        this.shiftKey = $event.shiftKey;\r\n        this.altKey = $event.altKey;\r\n        if ($event.altKey) {\r\n            this.mouseDownDelPoint($event);\r\n        }\r\n        else if ($event.shiftKey) {\r\n            this.mouseDownAddPoint($event);\r\n        }\r\n        else {\r\n            dragging = true;\r\n            let transformX = this.getTransform().invert;\r\n            let transformY = this.getOrthoTransform().invert;\r\n            startX = $event.offsetX;\r\n            startY = $event.offsetY;\r\n        }\r\n    }\r\n    this.onMouseUp = function($event) {\r\n        this.shiftKey = $event.shiftKey;\r\n        this.altKey = $event.altKey;\r\n        dragging = false;\r\n    }\r\n    this.onMouseMove = function($event) {\r\n        this.shiftKey = $event.shiftKey;\r\n        this.altKey = $event.altKey;\r\n        this.onMouseMoveTooltip($event);\r\n        if (dragging) {\r\n            this.mouseMoveDragging($event);\r\n        }\r\n        else {\r\n            this.mouseMoveNoDragging($event);\r\n        }\r\n        return true;\r\n    }\r\n    this.mouseMoveDragging = function($event) {\r\n        if (!_.isFinite(this.editPointIdx)) return;\r\n        if (!this.points[this.editPointIdx]) return;\r\n        let transformX = this.getTransform();\r\n        let transformY = this.getOrthoTransform();\r\n        let offsetX = $event.offsetX - startX;\r\n        let offsetY = $event.offsetY - startY;\r\n        let pixelX = transformX(self.getXFn(this.points[this.editPointIdx], this.editPointIdx, this.points));\r\n        let pixelY = transformY(self.getYFn(this.points[this.editPointIdx], this.editPointIdx, this.points));\r\n        pixelX += offsetX;\r\n        pixelY += offsetY;\r\n        this.setXFn(this.points[this.editPointIdx], transformX.invert(pixelX));\r\n        this.setYFn(this.points[this.editPointIdx], transformY.invert(pixelY));\r\n        //this.points[this.editPointIdx].x = transformX.invert(pixelX);\r\n        //this.points[this.editPointIdx].y = transformY.invert(pixelY);\r\n        startX = $event.offsetX;\r\n        startY = $event.offsetY;\r\n    }\r\n    let invertX, invertY;\r\n    this.mouseMoveNoDragging = function($event) {\r\n        //$event.stopPropagation();\r\n        //$event.preventDefault();\r\n        let transformX = this.getTransform();\r\n        let transformY = this.getOrthoTransform();\r\n        let x = $event.offsetX;\r\n        let y = $event.offsetY;\r\n        invertX = transformX.invert(x);\r\n        invertY = transformY.invert(y);\r\n        this.editPointIdx = null;\r\n        let result = findClosest({x,y}, this.points, transformX, transformY);\r\n        if (result.distance < 10) {\r\n            $timeout(() => {\r\n                self.editPointIdx = result.idx;\r\n            });\r\n        }\r\n    }\r\n    this.onMouseLeave = function($event) {\r\n        this.onMouseLeaveTooltip($event);\r\n        this.shiftKey = $event.shiftKey;\r\n        this.altKey = $event.altKey;\r\n        dragging = false;\r\n        invertX = undefined;\r\n        invertY = undefined;\r\n    }\r\n    this.vertexOffset = function(p, index, points) {\r\n        let transformX = this.getTransform();\r\n        let transformY = this.getOrthoTransform();\r\n        let toRet = {\r\n            x: transformX(self.getXFn(p, index, points)),\r\n            y: transformY(self.getYFn(p, index, points))\r\n        };\r\n        return toRet;\r\n    }\r\n    let vertexStyleList = [];\r\n    this.vertexStyle = function(p, idx) {\r\n        let vertexStyle = vertexStyleList[idx];\r\n        if (!vertexStyle) {\r\n            vertexStyleList[idx] = {\r\n                fill: 'transparent',\r\n                stroke: 'blue',\r\n                \"stroke-width\": 1\r\n            };\r\n            vertexStyle = vertexStyleList[idx];\r\n        }\r\n        return vertexStyle;\r\n    }\r\n    this.draggerStyleFn = function() {\r\n        if (this.editPointIdx === null || !this.mode) \r\n            return {\r\n                fill: 'none', stroke: 'none'\r\n            }\r\n        return {\r\n            fill: \"lightblue\",\r\n            stroke: 'blue',\r\n            \"stroke-width\": 1\r\n        }\r\n    }\r\n//    const draggerOffset = {}\r\n    this.draggerOffset = function() {\r\n        if (!_.isFinite(this.editPointIdx)) return {x: 0, y: 0};\r\n        let transformX = this.getTransform();\r\n        let transformY = this.getOrthoTransform();\r\n        let toRet = {\r\n            x: transformX(self.getXFn(this.points[this.editPointIdx], this.editPointIdx, this.points)),\r\n            y: transformY(self.getYFn(this.points[this.editPointIdx], this.editPointIdx, this.points))\r\n        };\r\n        return toRet;\r\n    }\r\n    this.getPoints = function() {\r\n        let transformX = this.getTransform();\r\n        //let range = d3.extent(transformX.range());\r\n        //if (range[1] - range[0] < 0.000001) {\r\n            //transformX = this.getTransform(true);\r\n        //}\r\n        let transformY = this.getOrthoTransform();\r\n        //range = d3.extent(transformY.range());\r\n        //if (range[1] - range[0] < 0.000001) {\r\n            //transformY = this.getOrthoTransform(true);\r\n        //}\r\n        let pointCoordinates = this.points.map((p, idx) => ({\r\n            x: transformX(self.getXFn(p, idx, this.points)),\r\n            y: transformY(self.getYFn(p, idx, this.points))\r\n        }));\r\n        return JSON.stringify(pointCoordinates);\r\n    }\r\n    this.getCoordinates = function() {\r\n        if (this.mode && _.isFinite(this.editPointIdx)) {\r\n            let p = this.points[this.editPointIdx];\r\n            return `X:${bestNumberFormat(self.getXFn(p, this.editPointIdx, this.points))}\r\n            Y:${bestNumberFormat(self.getYFn(p, this.editPointIdx, this.points))}`\r\n        } else {\r\n            if (!invertX || !invertY)\r\n                return '';\r\n            return `X:${bestNumberFormat(invertX)}\r\n            Y:${bestNumberFormat(invertY)}`;\r\n        }\r\n    }\r\n    this.distance = distance;\r\n    function distance(p1, p2, tX, tY) {\r\n        return Math.sqrt((p1.x - tX(self.getXFn(p2.p, p2.idx, this.points)))**2 + (p1.y - tY(self.getYFn(p2.p, p2.idx, this.points)))**2);\r\n    }\r\n    this.findClosest = findClosest;\r\n    function findClosest(p, points, tX, tY) {\r\n        let minDistance = 100000;\r\n        let minIdx = undefined;\r\n        for (let i = 0; i < points.length; i++) {\r\n            let d = distance(p, {p:points[i], idx:i}, tX, tY);\r\n            if (d < minDistance) {\r\n                minDistance = d;\r\n                minIdx = i;\r\n            }\r\n        }\r\n        return {\r\n            distance: minDistance,\r\n            idx : minIdx\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./interactive-layer/index.js?");

/***/ }),

/***/ "./interactive-layer/style.css":
/*!*************************************!*\
  !*** ./interactive-layer/style.css ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./interactive-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./interactive-layer/style.css?");

/***/ }),

/***/ "./interactive-layer/template.html":
/*!*****************************************!*\
  !*** ./interactive-layer/template.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div style=\\\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\\\">\\r\\n<svg ng-class=\\\"{'edit-point': self.mode, 'add-point': self.shiftKey, 'del-point': self.altKey}\\\" \\r\\n    style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.bottomPadding() + self.topPadding()}}px)\\\"\\r\\n    ng-mouseleave=\\\"self.onMouseLeave($event)\\\"\\r\\n    ng-mouseup=\\\"self.onMouseUp($event)\\\"\\r\\n    ng-mousedown=\\\"self.onMouseDown($event)\\\"\\r\\n    ng-mousemove=\\\"self.onMouseMove($event)\\\">\\r\\n    <g class=\\\"layer\\\">\\r\\n        <polygon ng-points=\\\"{{self.getPoints()}}\\\" ng-fill=\\\"{{self.fillStyle}}\\\" ng-stroke=\\\"{{self.strokeStyle}}\\\" ng-stroke-width=\\\"{{self.strokeWidth}}\\\">\\r\\n        </polygon>\\r\\n        <g ng-if=\\\"self.showVertex\\\" class=\\\"sub-layer\\\" ng-repeat=\\\"p in self.points\\\" ng-offset=\\\"{{ self.vertexOffset(p, $index) }}\\\">\\r\\n            <circle cx=\\\"0\\\" cy=\\\"0\\\" r=\\\"5\\\" ng-style='{fill:\\\"transparent\\\", stroke:\\\"green\\\", \\\"stroke-width\\\":1}'></circle>\\r\\n            <text>\\r\\n            {{self.getPointLabel(p)}} \\r\\n            </text>\\r\\n        </g>\\r\\n        <circle cx=\\\"0\\\" cy=\\\"0\\\" r=\\\"5\\\" ng-style=\\\"self.draggerStyleFn()\\\" ng-offset=\\\"{{self.draggerOffset()}}\\\"></circle>\\r\\n    </g>\\r\\n</svg>\\r\\n<div ng-if=\\\"self.showCoordinates\\\" class=\\\"status\\\" ng-bind=\\\"self.getCoordinates()\\\" ng-style=\\\"\\\"></div>\\r\\n</div>\\r\\n\";\n\n//# sourceURL=webpack:///./interactive-layer/template.html?");

/***/ }),

/***/ "./layer-collection/index.js":
/*!***********************************!*\
  !*** ./layer-collection/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = 'layerCollection';\r\nmodule.exports.name = name;\r\n__webpack_require__(/*! ./style.css */ \"./layer-collection/style.css\");\r\n\r\nangular.module(moduleName)\r\n    .component(name, {\r\n        controller: LayerCollectionController,\r\n        controllerAs: 'self',\r\n        template: __webpack_require__(/*! ./template.html */ \"./layer-collection/template.html\"),\r\n        bindings: {\r\n            padding: '<',\r\n            hPadding: '<',\r\n            vPadding: '<',\r\n            lPadding: '<',\r\n            rPadding: '<',\r\n            tPadding: '<',\r\n            bPadding: '<'\r\n        },\r\n        transclude: true\r\n    });\r\n\r\nfunction LayerCollectionController($timeout, $element, $scope) {\r\n    let self = this;\r\n    this.notiOpacity = 0;\r\n    this.msg = \"\";\r\n\r\n    this.tooltips = [];\r\n\r\n    this.$onInit = function() {\r\n        this.lPadding = this.leftPadding();\r\n        this.rPadding = this.rightPadding();\r\n        this.tPadding = this.topPadding();\r\n        this.bPadding = this.bottomPadding();\r\n        this.$timeout = $timeout;\r\n        this.$scope = $scope;\r\n    }\r\n    this.leftPadding = function(){\r\n        return this.lPadding || this.hPadding || this.padding || 0;\r\n    }\r\n    this.rightPadding = function(){\r\n        return this.rPadding || this.hPadding || this.padding || 0;\r\n    }\r\n    this.topPadding = function() {\r\n        return this.tPadding || this.vPadding || this.padding || 0;\r\n    }\r\n    this.bottomPadding = function() {\r\n        return this.bPadding || this.vPadding || this.padding || 0;\r\n    }\r\n    this.notify = function(msg, iconClass, duration) {\r\n        $timeout(() => {\r\n            this.notiOpacity = 1;\r\n            this.iconClass = iconClass || this.iconClass || 'ti-check';\r\n            this.msg = msg;\r\n        });\r\n        $timeout(() => {\r\n            this.notiOpacity = 0;\r\n        }, duration || 1000);\r\n    }\r\n    this.tooltip = function(on, msg) {\r\n        if (on) {\r\n            this.tooltips[0] = msg;\r\n        }\r\n        else {\r\n            this.tooltips.length = 0;\r\n        }\r\n    }\r\n    this.tooltipStyle = function() {\r\n        return {\r\n            bottom: 0, left: 0\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./layer-collection/index.js?");

/***/ }),

/***/ "./layer-collection/style.css":
/*!************************************!*\
  !*** ./layer-collection/style.css ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./layer-collection/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./layer-collection/style.css?");

/***/ }),

/***/ "./layer-collection/template.html":
/*!****************************************!*\
  !*** ./layer-collection/template.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div ng-transclude></div>\\r\\n<div class=\\\"notification\\\">\\r\\n    <div style=\\\"opacity: {{self.notiOpacity}};\\\">\\r\\n        <span class=\\\"{{self.iconClass}}\\\"></span>\\r\\n        <div style=\\\"font-size:14px;\\\">{{self.msg}}</div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div ng-show=\\\"self.tooltips.length\\\" class=\\\"tooltip\\\" ng-style=\\\"self.tooltipStyle();\\\">\\r\\n    <div ng-repeat=\\\"line in self.tooltips\\\">{{line}}</div>\\r\\n</div>\\r\\n\";\n\n//# sourceURL=webpack:///./layer-collection/template.html?");

/***/ }),

/***/ "./line-bin-layer/index.js":
/*!*********************************!*\
  !*** ./line-bin-layer/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = \"lineBinLayer\";\r\nmodule.exports.name = name;\r\n\r\nvar AbstractLayer = __webpack_require__(/*! ../line-layer */ \"./line-layer/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName).component(name, component({\r\n    controller: LineBinLayerController, \r\n    bindings: { }\r\n}));\r\n\r\nfunction LineBinLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n    this.defaultBindings = function() {\r\n        this.lineStyleDefault();\r\n    }\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n    this.getLine = function() {\r\n        let transform = this.getTransform();\r\n        let orthoTransform = this.getOrthoTransform();\r\n        let line = d3.line().curve(d3.curveBasis)\r\n            .x((d, i) => {\r\n                return transform((d.x0 + d.x1)/2);\r\n            })\r\n            .y((d, i) => {\r\n                return orthoTransform(d.length);\r\n            });\r\n        return line;\r\n    }\r\n    this.doAutofit = function() {\r\n        this.updateMaxY(d3.max(this.getData(), function(bin) {return bin.length;}));\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./line-bin-layer/index.js?");

/***/ }),

/***/ "./line-formula-layer/index.js":
/*!*************************************!*\
  !*** ./line-formula-layer/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = \"lineFormulaLayer\";\r\nmodule.exports.name = name;\r\n\r\nvar AbstractLayer = __webpack_require__(/*! ../line-layer */ \"./line-layer/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\nvar parseFormulaLatex = __webpack_require__(/*! ../common */ \"./common.js\").parseFormulaLatex;\r\n__webpack_require__(/*! ./style.css */ \"./line-formula-layer/style.css\");\r\n\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName).component(name, component({\r\n    controller: LFLayerController, \r\n    template: __webpack_require__(/*! ./template.html */ \"./line-formula-layer/template.html\"),\r\n    bindings: {\r\n        formula: \"<\",\r\n        resolution: \"<\",\r\n        eqnOffsets: \"<\",\r\n        showEquation: '<',\r\n        eqnName: \"<\",\r\n        inverted: \"<\",\r\n        mse: '<',\r\n        lineLabel: '<',\r\n        lineLabelStyle: '<'\r\n    }\r\n}));\r\nfunction LFLayerController($scope, $timeout, $element) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([\r\n        \"resolution\",\r\n        \"eqnOffsets\",\r\n        \"inverted\",\r\n    ]);\r\n\r\n    this.defaultBindings = function() {\r\n        this.lineStyleDefault();\r\n        this.resolution = this.resolution || 50;\r\n        this.eqnOffsets = this.eqnOffsets || [0,0];\r\n        this.showEquation = this.showEquation || false;\r\n        this.formula = this.formula || {};\r\n        this.lineLabelStyle = this.lineLabelStyle || {};\r\n        this.prefixId = `Pickett-${self.label}-${Date.now()}`;\r\n    }\r\n    function showEquation() {\r\n        if (!self.showEquation) return;\r\n        let html = katex.renderToString(self.parseFormulaLatex(),{displayMode: false});\r\n        $element.find('.equation').empty().append(html);\r\n    }\r\n    function showMSE() {\r\n        if (!self.mse) return;\r\n        let html = katex.renderToString(self.parseMSELatex(),{displayMode: false});\r\n        $element.find('.mse').empty().append(html);\r\n    }\r\n\r\n    this.registerWatch(function() {\r\n        showEquation();\r\n        showMSE();\r\n    });\r\n    this.doAutofit = function() {\r\n        this.updateMaxY(d3.max(this.getData(), function(point) {return self.getY(point);}));\r\n    }\r\n    this.getLine = function() {\r\n        let transform = this.getTransform();\r\n        let orthoTransform = this.getOrthoTransform();\r\n        let line = d3.line().curve(d3.curveBasis)\r\n            .x((d, i) => {\r\n                return transform(self.getX(d));\r\n            })\r\n            .y((d, i) => {\r\n                return orthoTransform(self.getY(d));\r\n            })\r\n            .defined(function (d) {\r\n                return !isNaN(d.x) && !isNaN(d.y)                                   \r\n                    && d.y != Infinity && d.y != -Infinity                          \r\n                    && !isNaN(transform(d.x)) && !isNaN(orthoTransform(d.y))           \r\n                    && transform(d.x) != -Infinity && transform(d.x) != Infinity  \r\n                    && orthoTransform(d.y) != -Infinity && orthoTransform(d.y) != Infinity  \r\n            });\r\n        return line;\r\n    }\r\n\r\n    function parseFormula(formula) {\r\n        switch(formula.family) {\r\n            case \"linear\":\r\n                formula.text = `${formula.slope} * x + ${formula.intercept}`;\r\n                return function(x) {\r\n                    return formula.slope * x + formula.intercept;\r\n                }\r\n            case \"exponential\":\r\n                formula.text = `${formula.ae} * Math.exp(${formula.b} * x)`;\r\n                return function(x) {\r\n                    return formula.ae * Math.exp(formula.b*x);\r\n                }\r\n            case \"power\":\r\n                formula.text = `${formula.coefficient} * (x ** ${formula.exponent})`;\r\n                return function(x) {\r\n                    return formula.coefficient * (x ** formula.exponent);\r\n                }\r\n            case \"pickett\":\r\n                return function(x) {\r\n                    //let result = Math.pow(10, (-formula.m) * (Math.log10(x) - Math.log10(formula.a*formula.rw) - Math.log10(1 / (formula.sw ** formula.n))));\r\n                    let result = Math.pow(10, (-formula.m) * (Math.log10(x)) + Math.log10((formula.a*formula.rw) / (formula.sw ** formula.n)));\r\n                    if (formula.isSwap) {\r\n                        result = Math.pow(10, (Math.log10(x) - (Math.log10((formula.a*formula.rw) / (formula.sw ** formula.n)))) / (-formula.m));\r\n                    }\r\n                    if (isNaN(result)) return undefined;\r\n                    return result;\r\n                }\r\n            default: return formula.fn;\r\n        }\r\n    }\r\n    this.parseFormulaLatex = function() {\r\n        return parseFormulaLatex(this.formula) || '';\r\n    }\r\n    this.parseMSELatex = function() {\r\n        return parseFormulaLatex(this.mse) || '';\r\n    }\r\n    /*\r\n    function parseFormulaLatex(formula) {\r\n        switch(formula.family) {\r\n            case \"linear\":\r\n                let intercept = formula.intercept;\r\n                return `y = ${formula.slope} \\\\times x ${intercept==0?'':(intercept<0 ? '-' + (-intercept):'+' + intercept)}`;\r\n            case \"exponential\":\r\n                return `y = ${formula.ae} \\\\times e^\\{${formula.b} x\\}`;\r\n\r\n        }\r\n    }*/\r\n\r\n    this.getData = function() {\r\n        if (!this.lineData || this._update) {\r\n            this._update = false;\r\n            this.lineData = [];\r\n            let f = parseFormula(this.formula);\r\n            if (!f) return this.lineData;\r\n            if (self.inverted) {\r\n                let step = (this.maxDrawY - this.minDrawY) / this.resolution;\r\n                for (let y = this.minDrawY; (y - this.minDrawY) * (y - this.maxDrawY) <= 0; y += step) {\r\n                    let x = f(y);\r\n                    if (!x) continue;\r\n                    if (this.autofit || (x - this.minDraw) * (x - this.maxDraw) <= 0)\r\n                        this.lineData.push({ x, y })\r\n                }\r\n            }\r\n            else {\r\n                let step = (this.maxDraw - this.minDraw) / this.resolution;\r\n                for (let x = this.minDraw; (x - this.minDraw) * (x - this.maxDraw) <= 0; x += step) {\r\n                    let y = f(x);\r\n                    if (!x) continue;\r\n                    if (this.autofit || (y - this.minDrawY) * (y - this.maxDrawY) <= 0)\r\n                        this.lineData.push({ x, y })\r\n                }\r\n            }\r\n        }\r\n        return this.lineData;\r\n    }\r\n    this.eqnStyle = function() {\r\n        return {\r\n            transform: 'translate(' + this.eqnOffsets[0] + \", \" + this.eqnOffsets[1] + \")\",\r\n            color: this.lineColor\r\n        }\r\n    }\r\n    this.eqnCopySuccess = function() {\r\n        console.log(\"Copy success\");\r\n        if (this.layerCollection) {\r\n            this.layerCollection.notify(\"Coppied\", 'ti-clip', 1000);\r\n        }\r\n    }\r\n    this.parentDraw = this.draw;\r\n    this.draw = function() {\r\n        self._update = true;\r\n        self.parentDraw();\r\n    }\r\n    this.labelOffset = function() {\r\n        let transform = self.getTransform();\r\n        let orthoTransform = self.getOrthoTransform();\r\n        const idx = 0;\r\n        let x = self.lineData[idx].x;\r\n        let y = self.lineData[idx].y;\r\n        if (_.isFinite(x) && _.isFinite(y)\r\n            && _.isFinite(transform(x)) && _.isFinite(orthoTransform(y))) {\r\n            return {\r\n                x: transform(x) + 7, \r\n                y: orthoTransform(y) - 7\r\n            }\r\n        }\r\n        return {x:0,y:0};\r\n    }\r\n    this.$onInit = function() {\r\n        $scope.$watch(function() {\r\n            return JSON.stringify(self.formula);\r\n        }, function () {\r\n            self._update = true;\r\n            self.drawOptimized();\r\n            showEquation();\r\n            showMSE();\r\n        });\r\n        this.doInit();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./line-formula-layer/index.js?");

/***/ }),

/***/ "./line-formula-layer/style.css":
/*!**************************************!*\
  !*** ./line-formula-layer/style.css ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./line-formula-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./line-formula-layer/style.css?");

/***/ }),

/***/ "./line-formula-layer/template.html":
/*!******************************************!*\
  !*** ./line-formula-layer/template.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n<svg style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px)\\\">\\r\\n    <g class=\\\"layer\\\">\\r\\n        <path id='{{self.prefixId}}' fill='none' stroke=\\\"{{self.lineColor}}\\\" stroke-dasharray=\\\"{{self.lineDash}}\\\" stroke-width=\\\"{{self.lineWidth}}\\\" />\\r\\n        <text ng-style=\\\"self.lineLabelStyle\\\" x=\\\"0\\\" y=\\\"0\\\">\\r\\n            <textPath href=\\\"#{{self.prefixId}}\\\" startOffset='3%'>\\r\\n                {{self.lineLabel}}\\r\\n            </textPath>\\r\\n        </text>\\r\\n    </g>\\r\\n</svg>\\r\\n<div class=\\\"equation-holder\\\" ng-style='self.eqnStyle();'>\\r\\n    <span ng-if=\\\"self.eqnName\\\">{{self.eqnName}}</span>\\r\\n    <span ng-if=\\\"self.eqnName && self.showEquation\\\"> : </span>\\r\\n    <span class='equation' ng-show=\\\"self.showEquation\\\"\\r\\n        ngclipboard ngclipboard-success=\\\"self.eqnCopySuccess(e);\\\"\\r\\n        data-clipboard-text=\\\"{{self.formula.text || self.parseFormulaLatex()}}\\\">\\r\\n    </span>\\r\\n    <span ng-if=\\\"self.mse\\\">; </span>\\r\\n    <span class='mse' ng-if=\\\"self.mse\\\"\\r\\n        ngclipboard data-clipboard-text=\\\"{{self.parseMSELatex()}}\\\">\\r\\n    </span>\\r\\n</div>\\r\\n\";\n\n//# sourceURL=webpack:///./line-formula-layer/template.html?");

/***/ }),

/***/ "./line-gaussian-layer/index.js":
/*!**************************************!*\
  !*** ./line-gaussian-layer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = \"lineGaussianLayer\";\r\nmodule.exports.name = name;\r\n\r\nvar AbstractLayer = __webpack_require__(/*! ../line-layer */ \"./line-layer/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n__webpack_require__(/*! ./style.css */ \"./line-gaussian-layer/style.css\");\r\n\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName).component(name, component({\r\n    controller: LGLayerController, \r\n    template: __webpack_require__(/*! ./template.html */ \"./line-gaussian-layer/template.html\"),\r\n    bindings: {\r\n        mean: \"<\",\r\n        sigma: \"<\",\r\n        resolution: \"<\",\r\n        lineColorSecond: \"<\",\r\n        lineWidthSecond: \"<\",\r\n        lineDashSecond: \"<\"\r\n    }\r\n}));\r\nfunction LGLayerController($scope, $timeout, $element) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([\r\n        \"mean\",\r\n        \"sigma\",\r\n        \"resolution\",\r\n        \"lineColorSecond\",\r\n        \"lineWidthSecond\",\r\n        \"lineDashSecond\"\r\n    ]);\r\n\r\n    this.defaultBindings = function() {\r\n        this.lineColorSecond = this.lineColorSecond || this.lineColor || \"purple\";\r\n        this.lineDashSecond = this.lineDashSecond || this.lineDash || \"5 3\";\r\n        this.lineWidthSecond = this.lineWidthSecond || this.lineWidth || 1;\r\n        this.resolution = this.resolution || 500;\r\n        this.mean = this.mean || 0;\r\n        this.sigma = this.sigma || 1;\r\n        this.lineStyleDefault();\r\n    }\r\n    this.doAutofit = function() {\r\n        this.updateMaxY(d3.max(this.getData(), function(point) {return self.getY(point);}));\r\n    }\r\n\r\n    this.watchProperties = this.watchProperties.concat(['mean', 'sigma', \r\n        'resolution', 'lineColorSecond', 'lineWidthSecond', 'lineDashSecond'\r\n    ]);\r\n    this.getLine = function() {\r\n        let transform = this.getTransform();\r\n        let orthoTransform = this.getOrthoTransform();\r\n        let line = d3.line().curve(d3.curveBasis)\r\n            .x((d, i) => {\r\n                return transform(self.getX(d));\r\n            })\r\n            .y((d, i) => {\r\n                return orthoTransform(self.getY(d));\r\n            });\r\n        return line;\r\n    }\r\n\r\n    //taken from Jason Davies science library\r\n    // https://github.com/jasondavies/science.js/\r\n    function gaussian(x, mean, sigma) {\r\n        let gaussianConstant = 1 / Math.sqrt(2 * Math.PI);\r\n\r\n        x = (x - mean) / sigma;\r\n        return gaussianConstant * Math.exp(-.5 * x * x) / sigma;\r\n    }\r\n\r\n    function normal(mean, sigma) {\r\n        let x = 0, y = 0, rds, c;\r\n        let xSample;\r\n        do {\r\n            do {\r\n                x = (Math.random() * 2 - 1);\r\n                y = (Math.random() * 2 - 1);\r\n                rds = x * x + y * y;\r\n            } while (rds == 0 || rds > 1);\r\n            c = Math.sqrt(-2 * Math.log(rds) / rds); // Box-Muller transform\r\n            xSample = mean + sigma * x * c;\r\n        } while ((xSample - self.minVal)*(xSample - self.maxVal) > 0 );\r\n\r\n        return xSample;\r\n    }\r\n\r\n    function getData(numSamples, mean, sigma) {\r\n        let x,y;\r\n        let data = new Array();\r\n        x = self.minVal;\r\n        y = gaussian(x, mean, sigma);\r\n        data.push({x, y});\r\n        x = self.maxVal;\r\n        y = gaussian(x, mean, sigma);\r\n        data.push({x, y});\r\n        for (let i = 0; i < numSamples; i++) {\r\n            x = normal(mean, sigma); // calc random draw from normal dist\r\n            y = gaussian(x, mean, sigma) // calc prob of rand draw\r\n            data.push({x, y});\r\n        };\r\n        // need to sort for plotting\r\n        data.sort(function (x, y) {\r\n            return x.x - y.x;\r\n        });\r\n        return data;\r\n    }\r\n    \r\n    this.getData = function() {\r\n        return getData(this.resolution, this.mean, this.sigma);\r\n    }\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n    this.sigmaLineStyle = function() {\r\n        return {\r\n            \"stroke\": this.lineColorSecond,\r\n            \"stroke-width\": this.lineWidthSecond,\r\n            \"stroke-dasharray\": this.lineDashSecond\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./line-gaussian-layer/index.js?");

/***/ }),

/***/ "./line-gaussian-layer/style.css":
/*!***************************************!*\
  !*** ./line-gaussian-layer/style.css ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./line-gaussian-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./line-gaussian-layer/style.css?");

/***/ }),

/***/ "./line-gaussian-layer/template.html":
/*!*******************************************!*\
  !*** ./line-gaussian-layer/template.html ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n<svg style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px)\\\">\\r\\n    <g class=\\\"layer\\\">\\r\\n        <path fill='none' stroke=\\\"{{self.lineColor}}\\\" stroke-dasharray=\\\"{{self.lineDash}}\\\" stroke-width=\\\"{{self.lineWidth}}\\\" />\\r\\n        <line ng-x1=\\\"{{self.getTransform()(self.mean - self.sigma)}}\\\" ng-y1=\\\"0\\\" \\r\\n            ng-x2=\\\"{{self.getTransform()(self.mean - self.sigma)}}\\\" \\r\\n            ng-y2=\\\"{{self.contentHeight(true);}}\\\"\\r\\n            ng-style=\\\"self.sigmaLineStyle()\\\" />\\r\\n        <line ng-x1=\\\"{{self.getTransform()(self.mean + self.sigma)}}\\\" ng-y1=\\\"0\\\" \\r\\n            ng-x2=\\\"{{self.getTransform()(self.mean + self.sigma)}}\\\" \\r\\n            ng-y2=\\\"{{self.contentHeight(true);}}\\\" \\r\\n            ng-style=\\\"self.sigmaLineStyle()\\\" />\\r\\n    </g>\\r\\n</svg>\\r\\n</div>\\r\\n\\r\\n\";\n\n//# sourceURL=webpack:///./line-gaussian-layer/template.html?");

/***/ }),

/***/ "./line-layer/index.js":
/*!*****************************!*\
  !*** ./line-layer/index.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const name = \"lineLayer\";\r\nmodule.exports.name = name;\r\nmodule.exports.klass = LineLayerController;\r\nmodule.exports.component = buildComponent;\r\n\r\n__webpack_require__(/*! ./style.css */ \"./line-layer/style.css\");\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer-2d */ \"./abstract-layer-2d/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n\r\nfunction buildComponent(componentData) {\r\n    componentData.template = componentData.template || __webpack_require__(/*! ./template.html */ \"./line-layer/template.html\");\r\n    componentData.bindings = {\r\n        lineColor: \"<\",\r\n        lineDash: \"<\",\r\n        lineWidth: \"<\",\r\n        lineData: \"<\",\r\n        getX : \"<\",\r\n        getY : \"<\",\r\n        ...componentData.bindings\r\n    }\r\n    return component(componentData);\r\n}\r\n\r\nfunction LineLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([\r\n        \"lineColor\",\r\n        \"lineDash\",\r\n        \"lineWidth\"\r\n    ]);\r\n    this.lineStyleDefault = function () {\r\n        this.twoDBindings();\r\n        this.lineColor = this.lineColor || 'black';\r\n        this.lineDash = this.lineDash || \"0\";\r\n        this.lineWidth = this.lineWidth || 1;\r\n        this.getX = typeof(this.getX) === \"function\" ? this.getX: (d) => {return d.x;};\r\n        this.getY = typeof(this.getY) === \"function\" ? this.getY: (d) => {return d.y;};\r\n    }\r\n    this.getLine = function() {\r\n        console.error(\"Abstract getLine\");\r\n    }\r\n    this.getData = function() {\r\n        return this.lineData;\r\n    }\r\n    this.draw = draw;\r\n    function draw() {\r\n        let line = this.getLine();\r\n        const data = this.getData() || [];\r\n        d3.select($element.find('path')[0])\r\n            .datum(data)\r\n            .attr('d', line);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./line-layer/index.js?");

/***/ }),

/***/ "./line-layer/style.css":
/*!******************************!*\
  !*** ./line-layer/style.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./line-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./line-layer/style.css?");

/***/ }),

/***/ "./line-layer/template.html":
/*!**********************************!*\
  !*** ./line-layer/template.html ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n<svg style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px)\\\">\\r\\n    <g class=\\\"layer\\\">\\r\\n        <path fill='none' stroke=\\\"{{self.lineColor}}\\\" stroke-dasharray=\\\"{{self.lineDash}}\\\" stroke-width=\\\"{{self.lineWidth}}\\\" />\\r\\n    </g>\\r\\n</svg>\\r\\n</div>\\r\\n\\r\\n\";\n\n//# sourceURL=webpack:///./line-layer/template.html?");

/***/ }),

/***/ "./line-point-layer/index.js":
/*!***********************************!*\
  !*** ./line-point-layer/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = \"linePointLayer\";\r\nmodule.exports.name = name;\r\n\r\nvar AbstractLayer = __webpack_require__(/*! ../line-layer */ \"./line-layer/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName).component(name, component({\r\n    controller: LPLayerController, \r\n    bindings: {\r\n    }\r\n}));\r\nfunction LPLayerController($scope, $timeout, $element) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n    this.watchProperties = this.watchProperties.concat([\r\n        \"lineData\",\r\n    ]);\r\n    this.defaultBindings = function() {\r\n        this.lineStyleDefault();\r\n    }\r\n    this.doAutofit = function() {\r\n        this.updateMaxY(d3.max(this.getData(), function(point,i) {return self.getY(point,i);}));\r\n    }\r\n    this.getLine = function() {\r\n        let transform = this.getTransform();\r\n        let orthoTransform = this.getOrthoTransform();\r\n        let line = d3.line().curve(d3.curveBasis)\r\n            .x((d, i) => {\r\n                return transform(self.getX(d, i));\r\n            })\r\n            .y((d, i) => {\r\n                return orthoTransform(self.getY(d, i));\r\n            })\r\n            .defined(function (d, i) {\r\n                let x = self.getX(d, i);\r\n                let y = self.getY(d, i);\r\n                return !isNaN(x) && !isNaN(y)\r\n                    && y != Infinity && y != -Infinity\r\n                    && !isNaN(transform(x)) && !isNaN(orthoTransform(y))\r\n                    && transform(x) != -Infinity && transform(x) != Infinity\r\n                    && orthoTransform(y) != -Infinity && orthoTransform(y) != Infinity\r\n            });\r\n        return line;\r\n    }\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./line-point-layer/index.js?");

/***/ }),

/***/ "./overlay-line-layer/index.js":
/*!*************************************!*\
  !*** ./overlay-line-layer/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = \"overlayLineLayer\";\r\nmodule.exports.name = name;\r\n\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer-2d */ \"./abstract-layer-2d/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n\r\nconst CanvasHelper = __webpack_require__(/*! ../canvas-helper */ \"./canvas-helper.js\");\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nfunction buildComponent(componentData) {\r\n    componentData.controller = componentData.controller || OverlayLineController;\r\n    componentData.template = componentData.template || __webpack_require__(/*! ./template.html */ \"./overlay-line-layer/template.html\");\r\n    componentData.bindings = {\r\n        overlayLineSpec: '<',\r\n        ...componentData.bindings\r\n    }\r\n    return component(componentData);\r\n}\r\nangular.module(moduleName).component(name, buildComponent({}));\r\nfunction OverlayLineController($scope, $timeout, $element) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n    this.watchProperties = this.watchProperties.concat([\r\n        \"overlayLineSpec\",\r\n    ]);\r\n    let _canvas;\r\n    function getCanvas() {\r\n        if (_canvas) return _canvas;\r\n        _canvas = $element.find('canvas')[0];\r\n        return _canvas;\r\n    }\r\n    function drawTick(startX, startY, endX, endY, length, helper, position, options) {\r\n        let fullLength = Math.sqrt((startX - endX)**2 + (startY - endY)**2);\r\n        let factor = Math.ceil(fullLength / length);\r\n        startX = startX - (endX - startX)/(factor * 2);\r\n        startY = startY - (endY - startY)/(factor * 2);\r\n        let stopX = startX + (endX - startX)/factor;\r\n        let stopY = startY + (endY - startY)/factor;\r\n        let point1 = {x: startX, y: startY};\r\n        let point2 = {x: stopX, y: stopY};\r\n        let rotatePoint;\r\n        if (position === 'start') {\r\n            rotatePoint = {x: startX, y: startY};\r\n        } else if (position === 'end') {\r\n            rotatePoint = {x: endX, y: endY};\r\n        } else {\r\n            rotatePoint = {x: (startX + stopX) / 2, y: (startY + stopY) / 2};\r\n        }\r\n        moveToOrigin(point1, rotatePoint);\r\n        moveToOrigin(point2, rotatePoint);\r\n        rotate(point1);\r\n        rotate(point2);\r\n        moveToOriginInv(point1, rotatePoint);\r\n        moveToOriginInv(point2, rotatePoint);\r\n        helper.segment(point1, point2, options);\r\n        function moveToOrigin(point, center) {\r\n            point.x -= center.x;\r\n            point.y -= center.y;\r\n        }\r\n        function moveToOriginInv(point, center) {\r\n            point.x += center.x;\r\n            point.y += center.y;\r\n        }\r\n        function rotate(point) {\r\n            let x = point.x;\r\n            let y = point.y;\r\n            point.x = -y;\r\n            point.y = x;\r\n        }\r\n    }\r\n    this.draw = function() {\r\n        let transform = this.getTransform();\r\n        let othorTransform = this.getOrthoTransform();\r\n        canvas = getCanvas();\r\n        canvas.width = this.contentWidth();\r\n        canvas.height = this.contentHeight();\r\n        if (canvas.width === 0 || canvas.height === 0) return;\r\n        let ctx = canvas.getContext('2d');\r\n        let penDefaultCfg = {\r\n            size: 10,\r\n            fillStyle: 'Yellow',\r\n            strokeStyle: 'Green',\r\n            strokeWidth: 2\r\n        }\r\n        let getTextCfg = (point) => ({\r\n            textSize: 15,\r\n            textContent: point.type,\r\n            fillStyle: point.color || 'Black',\r\n        }) \r\n        let helper = new CanvasHelper(ctx, penDefaultCfg);\r\n        self.overlayLineSpec.lines.forEach(line => {\r\n            let fillStyle = line.color.replace('Dk', 'Dark') || getLineColor(line.names) || penDefaultCfg.strokeStyle;\r\n            let strokeStyle = line.color.replace('Dk', 'Dark') || getLineColor(line.names) || penDefaultCfg.strokeStyle;\r\n            let lineWidth = penDefaultCfg.strokeWidth;\r\n            ctx.beginPath();\r\n            ctx.fillStyle = fillStyle;\r\n            ctx.strokeStyle = strokeStyle;\r\n            ctx.lineWidth = lineWidth;\r\n            line.data = line.data.filter(point => {\r\n                return point.x != '-' || point.y != '-';\r\n            })\r\n            line.data.forEach((point, pIdx, pointArr) => {\r\n                let startX = transform(parseFloat(point.x));\r\n                let startY = othorTransform(parseFloat(point.y));\r\n                if (!pointArr[pIdx + 1]) {\r\n                    let preX = transform(parseFloat(pointArr[pIdx - 1].x));\r\n                    let preY = othorTransform(parseFloat(pointArr[pIdx - 1].y));\r\n                    let endX = preX + (startX - preX) * 2;\r\n                    let endY = preY + (startY - preY) * 2;\r\n                    drawTick(startX, startY, endX, endY, 10, helper, 'center', {fillStyle, strokeStyle, lineWidth});\r\n                    if (!isNaN(point.type)) {\r\n                        helper.textSymbol(startX + 7, startY + 5, getTextCfg(point));\r\n                    }\r\n                    ctx.stroke();\r\n                    return;\r\n                }\r\n                let endX = transform(parseFloat(pointArr[pIdx + 1].x));\r\n                let endY = othorTransform(parseFloat(pointArr[pIdx + 1].y));\r\n                drawTick(startX, startY, endX, endY, 10, helper, 'center', {fillStyle, strokeStyle, lineWidth});\r\n                ctx.moveTo(startX, startY);\r\n                ctx.lineTo(endX, endY);\r\n                if (pIdx == 0) {\r\n                    helper.textSymbol(startX - 20, startY - 20, getTextCfg({\r\n                        type: line.names,\r\n                        color: line.color.replace('Dk', 'Dark') || getLineColor(line.names) \r\n                    }));\r\n                }\r\n                if (!isNaN(point.type)) {\r\n                    helper.textSymbol(startX + 7, startY + 5, getTextCfg({\r\n                        ...point,\r\n                    }));\r\n                }\r\n                ctx.stroke();\r\n            })\r\n        })\r\n    }\r\n    function getLineColor(name) {\r\n        let color;\r\n        if (name == 'SS') color = 'Green';                               \r\n        if (name == 'LS') color = 'Blue';                                \r\n        if (name == 'DOL') color = 'Pink';                               \r\n        return color;\r\n    }\r\n    this.defaultBindings = function() {\r\n        self.overlayLineSpec = self.overlayLineSpec || {};\r\n    }\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./overlay-line-layer/index.js?");

/***/ }),

/***/ "./overlay-line-layer/template.html":
/*!******************************************!*\
  !*** ./overlay-line-layer/template.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n<canvas style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px)\\\">\\r\\n</canvas>\\r\\n</div>\\r\\n\";\n\n//# sourceURL=webpack:///./overlay-line-layer/template.html?");

/***/ }),

/***/ "./plot-toolkit-module.js":
/*!********************************!*\
  !*** ./plot-toolkit-module.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const moduleName = 'plot-toolkit';\r\nangular.module(moduleName, [ 'ngclipboard', /*'katexView'*/ ])\r\n    .directive('ngOffset', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngOffset', function(o) {\r\n                let offset = JSON.parse(o);\r\n                elem.attr('transform', `translate(${offset.x}, ${offset.y})`);\r\n            });\r\n        };\r\n    })\r\n    .directive(\"ngPoints\", function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe(\"ngPoints\", function(pointsS) {\r\n                let pointsStr = \"\";\r\n                let points = JSON.parse(pointsS);\r\n                for (let p of points) {\r\n                    pointsStr += `${p.x},${p.y} `;\r\n                }\r\n                elem.attr(\"points\", pointsStr);\r\n            });\r\n        }\r\n    })\r\n    .directive('ngX', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngX', function(x) {\r\n                elem.attr('x', x);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngY', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngY', function(y) {\r\n                elem.attr('y', y);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngWidth', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngWidth', function(width) {\r\n                elem.attr('width', width);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngHeight', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngHeight', function(height) {\r\n                elem.attr('height', height);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngFill', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngFill', function(fill){\r\n                elem.attr('fill', fill);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngX1', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngX1', function(fill){\r\n                elem.attr('x1', fill);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngX2', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngX2', function(fill){\r\n                elem.attr('x2', fill);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngY1', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngY1', function(fill){\r\n                elem.attr('y1', fill);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngY2', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngY2', function(fill){\r\n                elem.attr('y2', fill);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngR', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngR', function(r){\r\n                elem.attr('r', r);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngStroke', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngStroke', function(strokeColor){\r\n                elem.attr('stroke', strokeColor);\r\n            });\r\n        };\r\n    })\r\n    .directive('ngStrokeWidth', function() {\r\n        return function(scope, elem, attrs) {\r\n            attrs.$observe('ngStrokeWidth', function(strokeWidth){\r\n                elem.attr('stroke-width', strokeWidth);\r\n            });\r\n        };\r\n    });\r\n\n\n//# sourceURL=webpack:///./plot-toolkit-module.js?");

/***/ }),

/***/ "./polygon-layer/index.js":
/*!********************************!*\
  !*** ./polygon-layer/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = 'polygonLayer';\r\nmodule.exports.name = name;\r\n\r\nvar AbstractLayer = __webpack_require__(/*! ../interactive-layer */ \"./interactive-layer/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\nconst _ = __webpack_require__(/*! lodash */ \"../node_modules/lodash/lodash.js\");\r\n\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName)\r\n    .component(name, component({\r\n        controller: PolygonLayerController,\r\n        bindings: { }\r\n    }));\r\n\r\nfunction PolygonLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    let dragging = false;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n    this.defaultBindings = function() {\r\n        this.interactiveBindings();\r\n    }\r\n    this.doAutofit = function() { }\r\n    this.draw = function() { }\r\n    this.mouseDownAddPoint = function($event) {\r\n        let transformX = this.getTransform();\r\n        let transformY = this.getOrthoTransform();\r\n        let x = $event.offsetX;\r\n        let y = $event.offsetY;\r\n        let result = this.findClosest({x,y}, this.points, transformX, transformY);\r\n        if (!_.isFinite(result.idx)) this.points.push({x:transformX.invert(x), y:transformY.invert(y)});\r\n        else if (this.points.length === 1) {\r\n            this.points.push({x:transformX.invert(x), y:transformY.invert(y)});\r\n        }\r\n        else {\r\n            let prevIdx = (result.idx + 1) % this.points.length;\r\n            let nextIdx = (result.idx + this.points.length - 1) % this.points.length;\r\n            let prevDist = this.distance({x,y}, {p: this.points[prevIdx], idx: prevIdx}, transformX, transformY);\r\n            let nextDist = this.distance({x,y}, {p:this.points[nextIdx], idx: nextIdx}, transformX, transformY);\r\n            if (prevDist < nextDist) {\r\n                this.points.splice(prevIdx, 0, {x:transformX.invert(x), y:transformY.invert(y)});\r\n            }\r\n            else {\r\n                this.points.splice(result.idx, 0, {x:transformX.invert(x), y:transformY.invert(y)});\r\n            }\r\n        }\r\n    }\r\n    this.mouseDownDelPoint = function($event) {\r\n        if (_.isFinite(this.editPointIdx)) {\r\n            this.points.splice(this.editPointIdx, 1);\r\n            this.editPointIdx = undefined;\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./polygon-layer/index.js?");

/***/ }),

/***/ "./scatter-layer/index.js":
/*!********************************!*\
  !*** ./scatter-layer/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = \"scatterLayer\";\r\nmodule.exports.name = name;\r\n\r\n\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer-2d */ \"./abstract-layer-2d/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\n\r\nvar isFinite = __webpack_require__(/*! lodash */ \"../node_modules/lodash/lodash.js\").isFinite;\r\n\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nvar CanvasHelper = __webpack_require__(/*! ../canvas-helper */ \"./canvas-helper.js\");\r\nangular.module(moduleName).component(name, component({\r\n    controller: ScatterLayerController, \r\n    template: __webpack_require__(/*! ./template.html */ \"./scatter-layer/template.html\"),\r\n    bindings: {\r\n        myDataX: \"<\",\r\n        myDataY: \"<\",\r\n        colorFunc: \"<\",\r\n        pointSizeFunc: \"<\",\r\n        symbolFunc: \"<\",\r\n        symbol: \"<\",\r\n        symbolSize: \"<\",\r\n        symbolFillStyle: \"<\",\r\n        symbolStrokeStyle: \"<\",\r\n        symbolStyle: \"<\",\r\n        getVal: \"<\",\r\n        getX: \"<\",\r\n        getY: \"<\"\r\n    }\r\n}));\r\n\r\nfunction ScatterLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([\r\n        \"symbol\",\r\n        \"symbolSize\",\r\n        \"symbolFillStyle\",\r\n        \"symbolStrokeStyle\",\r\n    ]);\r\n    this.defaultBindings = function() {\r\n        this.pointSizeFunc = checkFn(this.pointSizeFunc) || function(d, i) {return 9;};\r\n        this.getX = checkFn(this.getX) || checkFn(this.getVal) || asIs;\r\n        this.getY = checkFn(this.getY) || checkFn(this.getVal) || asIs;\r\n        this.symbol = this.symbol || 'circle';\r\n        this.symbolSize = this.symbolSize || 5;\r\n        this.symbolFillStyle = this.symbolFillStyle || 'blue';\r\n        this.symbolStrokeStyle = this.symbolStrokeStyle || 'blue';\r\n        this.colorFunc = checkFn(this.colorFunc) || function (d, i) {\r\n            return self.symbolFillStyle || \"blue\";\r\n        };\r\n        this.symbolFunc= checkFn(this.symbolFunc) || function (d, i) {\r\n            return null;\r\n        };\r\n    }\r\n    this.$onInit = function() {\r\n        $scope.$watch(function() {\r\n            return self.myDataX;\r\n        }, function() {\r\n            self.getPoints(true);\r\n            self.draw();\r\n        });\r\n        $scope.$watch(function() {\r\n            return self.myDataY;\r\n        }, function() {\r\n            self.getPoints(true);\r\n            self.draw();\r\n        });\r\n        this.doInit();\r\n    }\r\n    this.doAutofit = function() {\r\n        this.updateMaxY(d3.max(this.myDataY, function(point) {return self.getY(point, i)}));\r\n    }\r\n    this.getPoints = function(update) {\r\n        if (!update && this.points) return this.points;\r\n        this.points = [];\r\n        if (this.myDataX && this.myDataX.length && this.myDataY && this.myDataY.length) {\r\n            let n = Math.max(this.myDataX.length, this.myDataY.length);\r\n            for (let i = 0; i < n; i++) {\r\n                let x = this.getX(this.myDataX[i], i);\r\n                let y = this.getY(this.myDataY[i], i);\r\n                if (isFinite(x) && isFinite(y)) {\r\n                    this.points.push({\r\n                        fillStyle: this.colorFunc({x, y}, i),\r\n                        size: this.pointSizeFunc({x, y}, i),\r\n                        symbolStyle: this.symbolFunc({x, y}, i),\r\n                        idx: i, x, y\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return this.points;\r\n    }\r\n    let _canvas;\r\n    function getCanvas() {\r\n        if (_canvas) return _canvas;\r\n        _canvas = $element.find('canvas')[0];\r\n        return _canvas;\r\n    }\r\n    function isNullRange(transform) {\r\n        let range = transform.range();\r\n        return !(range[1] - range[0]);\r\n    }\r\n    this.draw = function() {\r\n        let transformX = this.getTransform();\r\n        let transformY = this.getOrthoTransform();\r\n        if (isNullRange(transformX) || isNullRange(transformY)) return;\r\n        canvas = getCanvas();\r\n        canvas.width = this.contentWidth();\r\n        canvas.height = this.contentHeight();\r\n        let ctx = canvas.getContext('2d');\r\n        let symbolDefaultCfg = {\r\n            size: this.symbolSize,\r\n            fillStyle: this.symbolFillStyle,\r\n            strokeStyle: this.symbolStrokeStyle,\r\n            ...this.symbolStyle,\r\n        }\r\n        let helper = new CanvasHelper(ctx, symbolDefaultCfg);\r\n        let plotFunc = helper[this.symbol];\r\n        let points = this.getPoints();\r\n        for (let p of points) {\r\n            plotFunc.call(helper, transformX(p.x), transformY(p.y), {\r\n                fillStyle: p.fillStyle,\r\n                pointSize: p.size / 4,\r\n                textSize: this.pointSizeFunc ? p.size * 1.5 : p.size / 4 * 1.5,\r\n                textContent: p.symbolStyle\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction asIs(d,i) {\r\n    return d;\r\n}\r\nfunction checkFn(f) {\r\n    return typeof(f) === \"function\" ? f : null;\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./scatter-layer/index.js?");

/***/ }),

/***/ "./scatter-layer/template.html":
/*!*************************************!*\
  !*** ./scatter-layer/template.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n<canvas style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.topPadding() + self.bottomPadding()}}px)\\\">\\r\\n</canvas>\\r\\n</div>\\r\\n\\r\\n\";\n\n//# sourceURL=webpack:///./scatter-layer/template.html?");

/***/ }),

/***/ "./segment-layer/index.js":
/*!********************************!*\
  !*** ./segment-layer/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = 'segmentLayer';\r\nmodule.exports.name = name;\r\n\r\nlet common = __webpack_require__(/*! ../common */ \"./common.js\");\r\nlet findLinearEqn = common.findLinearEqn;\r\nlet parseFormulaLatex = common.parseFormulaLatex;\r\nvar AbstractLayer = __webpack_require__(/*! ../interactive-layer */ \"./interactive-layer/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\nconst _ = __webpack_require__(/*! lodash */ \"../node_modules/lodash/lodash.js\");\r\n\r\n__webpack_require__(/*! ./style.css */ \"./segment-layer/style.css\");\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName)\r\n    .component(name, component({\r\n        controller: SegmentLayerController,\r\n        template: __webpack_require__(/*! ./template.html */ \"./segment-layer/template.html\"),\r\n        bindings: {\r\n            eqnOffsets: \"<\",\r\n            showEquation: \"<\",\r\n            onEqnChanged: \"<\"\r\n        }\r\n    }));\r\n\r\nfunction SegmentLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    let dragging = false;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.watchProperties = this.watchProperties.concat([\r\n        \"eqnOffsets\"\r\n    ]);\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n        $scope.$watch(function() {\r\n            return self.points;\r\n        }, function() {\r\n            showEquation();\r\n        }, true);\r\n    }\r\n    this.defaultBindings = function() {\r\n        this.interactiveBindings();\r\n        this.eqnOffsets = this.eqnOffsets || [0,0];\r\n    }\r\n    this.doAutofit = function() { }\r\n    this.draw = function() { }\r\n    this.mouseDownAddPoint = function($event) {\r\n        let transformX = this.getTransform();\r\n        let transformY = this.getOrthoTransform();\r\n        let x = $event.offsetX;\r\n        let y = $event.offsetY;\r\n        let result = this.findClosest({x,y}, this.points, transformX, transformY);\r\n        if (!_.isFinite(result.idx)) {\r\n            this.points = [{x:transformX.invert(x), y:transformY.invert(y)}];\r\n        }\r\n        else if (this.points.length === 1) {\r\n            this.points.push({x:transformX.invert(x), y:transformY.invert(y)});\r\n        }\r\n        else {\r\n            this.points.splice(result.idx, 1, {x:transformX.invert(x), y:transformY.invert(y)});\r\n        }\r\n    }\r\n    this.mouseDownDelPoint = function($event) {\r\n        if (_.isFinite(this.editPointIdx)) {\r\n            this.points.splice(this.editPointIdx, 1);\r\n            this.editPointIdx = undefined;\r\n        }\r\n    }\r\n    this.calcEquation = function() {\r\n        if (this.points.length !== 2) return \"\";\r\n        else {\r\n            let formula = findLinearEqn(this.points[0], this.points[1], self.loga, self.orthoLoga);\r\n            let latex = parseFormulaLatex(formula);\r\n            self.onEqnChanged && self.onEqnChanged(formula);\r\n            return latex;\r\n        }\r\n    }\r\n    this.eqnStyle = function() {\r\n        return {\r\n            transform: 'translate(' + this.eqnOffsets[0] + \", \" + this.eqnOffsets[1] + \")\",\r\n            color: this.strokeStyle\r\n        }\r\n    }\r\n    this.eqnCopySuccess = function() {\r\n        console.log(\"Copy success\");\r\n        if (this.layerCollection) {\r\n            this.layerCollection.notify(\"Coppied\", 'ti-clip', 1000);\r\n        }\r\n    }\r\n    function showEquation() {\r\n        let html = katex.renderToString(self.calcEquation(), {throwOnError: false});\r\n        $element.find('.equation').empty().append(html);\r\n    }\r\n    this.registerWatch(function() {\r\n        showEquation();\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack:///./segment-layer/index.js?");

/***/ }),

/***/ "./segment-layer/style.css":
/*!*********************************!*\
  !*** ./segment-layer/style.css ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./segment-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./segment-layer/style.css?");

/***/ }),

/***/ "./segment-layer/template.html":
/*!*************************************!*\
  !*** ./segment-layer/template.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div>\\r\\n<svg ng-class=\\\"{'edit-point': self.mode, 'add-point': self.shiftKey, 'del-point': self.altKey}\\\" \\r\\n    style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.bottomPadding() + self.topPadding()}}px)\\\"\\r\\n    ng-mouseleave=\\\"self.onMouseLeave($event)\\\"\\r\\n    ng-mouseup=\\\"self.onMouseUp($event)\\\"\\r\\n    ng-mousedown=\\\"self.onMouseDown($event)\\\"\\r\\n    ng-mousemove=\\\"self.onMouseMove($event)\\\">\\r\\n    <g class=\\\"layer\\\">\\r\\n        <polygon ng-points=\\\"{{self.getPoints()}}\\\" ng-fill=\\\"{{self.fillStyle}}\\\" ng-stroke=\\\"{{self.strokeStyle}}\\\" ng-stroke-width=\\\"{{self.strokeWidth}}\\\">\\r\\n        </polygon>\\r\\n        <g class=\\\"sub-layer\\\" ng-repeat=\\\"p in self.points\\\" ng-offset=\\\"{{ self.vertexOffset(p, $index) }}\\\">\\r\\n            <circle cx=\\\"0\\\" cy=\\\"0\\\" r=\\\"5\\\" ng-style='{fill:\\\"transparent\\\", stroke:\\\"green\\\", \\\"stroke-width\\\":1}'></circle>\\r\\n            <text>\\r\\n            {{self.getPointLabel(p)}} \\r\\n            </text>\\r\\n        </g>\\r\\n        <circle cx=\\\"0\\\" cy=\\\"0\\\" r=\\\"5\\\" ng-style=\\\"self.draggerStyleFn()\\\" ng-offset=\\\"{{self.draggerOffset()}}\\\"></circle>\\r\\n    </g>\\r\\n</svg>\\r\\n</div>\\r\\n<div ng-if=\\\"self.showCoordinates\\\" class=\\\"status\\\" ng-bind=\\\"self.getCoordinates()\\\" ng-style=\\\"\\\"></div>\\r\\n<div class='equation' ng-if=\\\"self.showEquation\\\"\\r\\n    ng-style='self.eqnStyle();' \\r\\n    ngclipboard ngclipboard-success=\\\"self.eqnCopySuccess(e);\\\"\\r\\n    data-clipboard-text=\\\"{{self.calcEquation();}}\\\"></div>\\r\\n</div>\\r\\n\";\n\n//# sourceURL=webpack:///./segment-layer/template.html?");

/***/ }),

/***/ "./tooltip-layer/index.js":
/*!********************************!*\
  !*** ./tooltip-layer/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = 'plot-toolkit';\r\nconst name = 'tooltipLayer';\r\nmodule.exports.name = name;\r\n\r\nvar AbstractLayer = __webpack_require__(/*! ../abstract-layer-2d */ \"./abstract-layer-2d/index.js\");\r\nvar AbstractLayerController = AbstractLayer.klass;\r\nvar component = AbstractLayer.component;\r\nconst _ = __webpack_require__(/*! lodash */ \"../node_modules/lodash/lodash.js\");\r\nconst bestNumberFormat = __webpack_require__(/*! ../common */ \"./common.js\").bestNumberFormat;\r\n\r\n__webpack_require__(/*! ./style.css */ \"./tooltip-layer/style.css\");\r\nvar layerCollection = __webpack_require__(/*! ../layer-collection */ \"./layer-collection/index.js\");\r\nangular.module(moduleName)\r\n    .component(name, component({\r\n        controller: TooltipLayerController,\r\n        template: __webpack_require__(/*! ./template.html */ \"./tooltip-layer/template.html\"),\r\n        bindings: {}\r\n    }));\r\n\r\nfunction TooltipLayerController($timeout, $element, $scope) {\r\n    let self = this;\r\n    let dragging = false;\r\n    AbstractLayerController.call(this, $timeout, $element, $scope);\r\n\r\n    this.$onInit = function() {\r\n        this.doInit();\r\n    }\r\n    this.defaultBindings = function() {}\r\n    this.draw = function() {}\r\n\tlet invertX, invertY;\r\n    this.onMouseMove = function($event) {\r\n        this.shiftKey = $event.shiftKey;\r\n        this.altKey = $event.altKey;\r\n        this.onMouseMoveTooltip($event);\r\n        let transformX = this.getTransform();\r\n        let transformY = this.getOrthoTransform();\r\n        let x = $event.offsetX;\r\n        let y = $event.offsetY;\r\n        invertX = transformX.invert(x);\r\n        invertY = transformY.invert(y);\r\n        return true;\r\n    }\r\n    this.onMouseLeave = function($event) {\r\n        invertX = undefined;\r\n        invertY = undefined;\r\n    }\r\n    this.getCoordinates = function() {\r\n        if (!invertX || !invertY)\r\n            return '';\r\n        return `X: ${invertX ? bestNumberFormat(invertX) : 0}\r\n        Y:${invertY ? bestNumberFormat(invertY) : 0}`;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./tooltip-layer/index.js?");

/***/ }),

/***/ "./tooltip-layer/style.css":
/*!*********************************!*\
  !*** ./tooltip-layer/style.css ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"../node_modules/css-loader/dist/cjs.js!./tooltip-layer/style.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./tooltip-layer/style.css?");

/***/ }),

/***/ "./tooltip-layer/template.html":
/*!*************************************!*\
  !*** ./tooltip-layer/template.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div style=\\\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\\\">\\r\\n<svg style=\\\"margin: {{self.paddingStr();}};width:calc(100% - {{self.leftPadding() + self.rightPadding()}}px); height:calc(100% - {{self.bottomPadding() + self.topPadding()}}px)\\\"\\r\\n    ng-mouseleave=\\\"self.onMouseLeave($event)\\\"\\r\\n    ng-mouseup=\\\"self.onMouseUp($event)\\\"\\r\\n    ng-mousedown=\\\"self.onMouseDown($event)\\\"\\r\\n    ng-mousemove=\\\"self.onMouseMove($event)\\\">\\r\\n</svg>\\r\\n<div class=\\\"status\\\" ng-bind=\\\"self.getCoordinates()\\\" ng-style=\\\"\\\"></div>\\r\\n</div>\\r\\n\";\n\n//# sourceURL=webpack:///./tooltip-layer/template.html?");

/***/ }),

/***/ "dll-reference library":
/*!**************************!*\
  !*** external "library" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = library;\n\n//# sourceURL=webpack:///external_%22library%22?");

/***/ })

/******/ });